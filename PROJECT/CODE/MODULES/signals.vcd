$date
	Fri Dec 29 22:17:18 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! simulation_s_status [3:0] $end
$var wire 4 " simulation_s_result [3:0] $end
$var reg 4 # s_arg_A [3:0] $end
$var reg 4 $ s_arg_B [3:0] $end
$var reg 1 % s_clk $end
$var reg 4 & s_op [3:0] $end
$var reg 1 ' s_reset $end
$scope module new_alu_model_simulation $end
$var wire 4 ( i_arg_A [3:0] $end
$var wire 4 ) i_arg_B [3:0] $end
$var wire 1 % i_clk $end
$var wire 4 * i_op [3:0] $end
$var wire 1 ' i_reset $end
$var wire 4 + M_zm_to_u2_status [3:0] $end
$var wire 4 , M_zm_to_u2_result [3:0] $end
$var wire 4 - M_right_shift_status [3:0] $end
$var wire 4 . M_right_shift_result [3:0] $end
$var wire 4 / M_division_status [3:0] $end
$var wire 4 0 M_division_result [3:0] $end
$var wire 4 1 M_addition_status [3:0] $end
$var wire 4 2 M_addition_result [3:0] $end
$var wire 1 3 A_u2_to_zm_status $end
$var wire 1 4 A_u2_to_zm_result $end
$var wire 1 5 A_sub_and_mul_status $end
$var wire 1 6 A_sub_and_mul_result $end
$var wire 1 7 A_comparison_2_status $end
$var wire 1 8 A_comparison_2_result $end
$var wire 1 9 A_add_bit_status $end
$var wire 1 : A_add_bit_result $end
$var reg 4 ; finale_cache_result [3:0] $end
$var reg 4 < finale_cache_status [3:0] $end
$var reg 4 = o_result [3:0] $end
$var reg 4 > o_status [3:0] $end
$scope module mod_add_bit $end
$var wire 4 ? i_arg_A [3:0] $end
$var wire 4 @ i_arg_B [3:0] $end
$var reg 4 A cache_result [3:0] $end
$var reg 4 B cache_status [3:0] $end
$var reg 4 C s_A [3:0] $end
$var reg 4 D s_B [3:0] $end
$var reg 4 E sum [3:0] $end
$upscope $end
$scope module mod_addition_1 $end
$var wire 4 F i_arg_A [3:0] $end
$var wire 4 G i_arg_B [3:0] $end
$var reg 5 H cache [4:0] $end
$var reg 4 I cache_B [3:0] $end
$var reg 4 J cache_result [3:0] $end
$var reg 4 K cache_status [3:0] $end
$upscope $end
$scope module mod_comparison_2 $end
$var wire 4 L i_arg_A [3:0] $end
$var wire 4 M i_arg_B [3:0] $end
$var reg 4 N cache_result [3:0] $end
$var reg 4 O cache_status [3:0] $end
$var reg 4 P comp_A [3:0] $end
$var reg 4 Q comp_B [3:0] $end
$upscope $end
$scope module mod_division_1 $end
$var wire 4 R i_arg_A [3:0] $end
$var wire 4 S i_arg_B [3:0] $end
$var reg 4 T cache_result [3:0] $end
$var reg 4 U cache_status [3:0] $end
$upscope $end
$scope module mod_right_shift_1 $end
$var wire 4 V i_arg_A [3:0] $end
$var wire 4 W i_arg_B [3:0] $end
$var reg 4 X cache_result [3:0] $end
$var reg 4 Y cache_status [3:0] $end
$upscope $end
$scope module mod_sub_and_mul $end
$var wire 4 Z i_arg_A [3:0] $end
$var wire 4 [ i_arg_B [3:0] $end
$var reg 4 \ cache [3:0] $end
$var reg 4 ] cache_result [3:0] $end
$var reg 4 ^ cache_status [3:0] $end
$var reg 4 _ s_A [3:0] $end
$var reg 4 ` s_B [3:0] $end
$var reg 4 a sum [3:0] $end
$upscope $end
$scope module mod_u2_to_zm $end
$var wire 4 b i_arg_A [3:0] $end
$var wire 4 c i_arg_B [3:0] $end
$var reg 4 d cache_result [3:0] $end
$var reg 4 e cache_status [3:0] $end
$upscope $end
$scope module mod_zm_to_u2 $end
$var wire 4 f i_arg_A [3:0] $end
$var wire 4 g i_arg_B [3:0] $end
$var reg 4 h cache_result [3:0] $end
$var reg 4 i cache_status [3:0] $end
$upscope $end
$upscope $end
$upscope $end
