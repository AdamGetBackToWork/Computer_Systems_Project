/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module \$paramod\absolute\M=8\K=8 (i_arg_B, cache_result, cache_status);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire [31:0] a;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_B;
  wire [31:0] x;
  assign _00_ = ~i_arg_B[3];
  assign _01_ = ~i_arg_B[7];
  assign _02_ = ~i_arg_B[6];
  assign _03_ = i_arg_B[1] & i_arg_B[0];
  assign _04_ = ~_03_;
  assign _05_ = i_arg_B[1] | i_arg_B[0];
  assign _06_ = ~_05_;
  assign _07_ = i_arg_B[7] & _05_;
  assign _08_ = _04_ & _07_;
  assign _09_ = i_arg_B[1] & _01_;
  assign cache_result[1] = _08_ | _09_;
  assign cache_result[2] = i_arg_B[2] ^ _07_;
  assign _10_ = ~cache_result[2];
  assign _11_ = i_arg_B[2] | _05_;
  assign _12_ = i_arg_B[7] & _11_;
  assign _13_ = _00_ ^ _12_;
  assign cache_result[3] = ~_13_;
  assign _14_ = i_arg_B[3] | _11_;
  assign _15_ = i_arg_B[7] & _14_;
  assign cache_result[4] = i_arg_B[4] ^ _15_;
  assign _16_ = i_arg_B[4] | _14_;
  assign _17_ = i_arg_B[7] & _16_;
  assign cache_result[5] = i_arg_B[5] ^ _17_;
  assign _18_ = i_arg_B[5] | _16_;
  assign _19_ = ~_18_;
  assign _20_ = i_arg_B[7] & _18_;
  assign _21_ = _02_ ^ _20_;
  assign cache_result[6] = ~_21_;
  assign _22_ = i_arg_B[7] & _02_;
  assign cache_result[7] = _19_ & _22_;
  assign _23_ = i_arg_B[0] & cache_result[1];
  assign _24_ = _06_ | _23_;
  assign _25_ = _10_ ^ _24_;
  assign _26_ = cache_result[2] ^ _24_;
  assign _27_ = _13_ ^ cache_result[4];
  assign _28_ = cache_result[5] ^ _27_;
  assign _29_ = _25_ ^ _28_;
  assign _30_ = _26_ ^ _28_;
  assign _31_ = _18_ & _21_;
  assign _32_ = _29_ & _31_;
  assign _33_ = cache_result[6] & _30_;
  assign cache_status[1] = _32_ | _33_;
  assign a = 32'd8;
  assign cache_result[0] = i_arg_B[0];
  assign { cache_status[3:2], cache_status[0] } = 3'h0;
  assign x[31:8] = 24'h000000;
endmodule

module \$paramod\add_bit\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  wire [7:0] s_A;
  wire [7:0] s_B;
  assign _000_ = ~i_arg_B[2];
  assign _001_ = ~i_arg_B[1];
  assign _002_ = ~i_arg_B[0];
  assign _003_ = i_arg_A[6] & i_arg_B[6];
  assign _004_ = i_arg_A[5] & i_arg_B[5];
  assign _005_ = i_arg_A[4] & i_arg_B[4];
  assign _006_ = i_arg_A[4] ^ i_arg_B[4];
  assign _007_ = i_arg_A[3] & i_arg_B[3];
  assign _008_ = i_arg_A[3] | i_arg_B[3];
  assign _009_ = i_arg_A[2] & i_arg_B[2];
  assign _010_ = i_arg_A[1] & i_arg_B[1];
  assign _011_ = i_arg_A[0] & i_arg_B[0];
  assign _012_ = i_arg_A[1] ^ i_arg_B[1];
  assign _013_ = _011_ & _012_;
  assign _014_ = _010_ | _013_;
  assign _015_ = i_arg_A[2] ^ i_arg_B[2];
  assign _016_ = _014_ & _015_;
  assign _017_ = _009_ | _016_;
  assign _018_ = _008_ & _017_;
  assign _019_ = _007_ | _018_;
  assign _020_ = _006_ & _019_;
  assign _021_ = _005_ | _020_;
  assign _022_ = i_arg_A[5] ^ i_arg_B[5];
  assign _023_ = _021_ & _022_;
  assign _024_ = _004_ | _023_;
  assign _025_ = i_arg_A[6] ^ i_arg_B[6];
  assign _026_ = _024_ & _025_;
  assign _027_ = _003_ | _026_;
  assign _028_ = i_arg_A[7] | i_arg_B[7];
  assign _029_ = i_arg_A[7] & i_arg_B[7];
  assign _030_ = _027_ | _029_;
  assign _031_ = _027_ & _028_;
  assign _032_ = ~_031_;
  assign cache_status[3] = _030_ & _032_;
  assign _033_ = i_arg_B[7] | i_arg_B[6];
  assign _034_ = i_arg_B[5] | i_arg_B[4];
  assign _035_ = _033_ | _034_;
  assign _036_ = i_arg_B[0] | _035_;
  assign _037_ = i_arg_B[1] | _036_;
  assign _038_ = i_arg_B[3] | i_arg_B[2];
  assign _039_ = _037_ | _038_;
  assign _040_ = i_arg_A[0] ^ i_arg_B[0];
  assign cache_result[0] = _039_ & _040_;
  assign _041_ = _002_ | _035_;
  assign _042_ = i_arg_B[1] | _041_;
  assign _043_ = _038_ | _042_;
  assign _044_ = _011_ ^ _012_;
  assign cache_result[1] = _043_ & _044_;
  assign _045_ = _001_ | _036_;
  assign _046_ = _038_ | _045_;
  assign _047_ = _014_ ^ _015_;
  assign cache_result[2] = _046_ & _047_;
  assign _048_ = i_arg_A[3] ^ i_arg_B[3];
  assign _049_ = _001_ | _041_;
  assign _050_ = _038_ | _049_;
  assign _051_ = _017_ ^ _048_;
  assign cache_result[3] = _050_ & _051_;
  assign _052_ = i_arg_B[3] | _000_;
  assign _053_ = _037_ | _052_;
  assign _054_ = _006_ ^ _019_;
  assign cache_result[4] = _053_ & _054_;
  assign _055_ = _042_ | _052_;
  assign _056_ = _021_ ^ _022_;
  assign cache_result[5] = _055_ & _056_;
  assign _057_ = _045_ | _052_;
  assign _058_ = _024_ ^ _025_;
  assign cache_result[6] = _057_ & _058_;
  assign _059_ = _049_ | _052_;
  assign _060_ = i_arg_A[7] ^ i_arg_B[7];
  assign _061_ = _027_ ^ _060_;
  assign cache_result[7] = _059_ & _061_;
  assign cache_status[2:0] = { 2'h0, cache_status[3] };
  assign s_A = i_arg_A;
  assign s_B = i_arg_B;
endmodule

module \$paramod\addition_1\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  assign _066_ = ~i_arg_B[6];
  assign _067_ = ~i_arg_B[5];
  assign _068_ = ~i_arg_B[4];
  assign _069_ = ~i_arg_B[3];
  assign _070_ = ~i_arg_A[2];
  assign _071_ = ~i_arg_B[2];
  assign _072_ = ~i_arg_A[1];
  assign _073_ = ~i_arg_A[0];
  assign _074_ = ~i_arg_B[7];
  assign _075_ = _066_ & i_arg_A[6];
  assign _076_ = i_arg_B[6] | i_arg_A[6];
  assign _077_ = i_arg_B[6] & i_arg_A[6];
  assign _078_ = _066_ ^ i_arg_A[6];
  assign _079_ = i_arg_A[5] & _067_;
  assign _080_ = i_arg_A[5] & i_arg_B[5];
  assign _081_ = i_arg_A[5] | i_arg_B[5];
  assign _082_ = ~_081_;
  assign _083_ = _080_ | _082_;
  assign _084_ = ~_083_;
  assign _085_ = _068_ & i_arg_A[4];
  assign _086_ = i_arg_A[3] & _069_;
  assign _087_ = i_arg_A[3] & i_arg_B[3];
  assign _088_ = i_arg_A[3] | i_arg_B[3];
  assign _089_ = i_arg_A[3] ^ _069_;
  assign _090_ = i_arg_A[2] & _071_;
  assign _091_ = _072_ | i_arg_B[1];
  assign _092_ = _073_ | i_arg_B[0];
  assign _093_ = i_arg_A[1] | i_arg_B[1];
  assign _094_ = i_arg_A[1] & i_arg_B[1];
  assign _095_ = i_arg_A[1] ^ i_arg_B[1];
  assign _096_ = ~_095_;
  assign _097_ = _092_ | _095_;
  assign _098_ = _091_ & _097_;
  assign _099_ = i_arg_A[2] & i_arg_B[2];
  assign _100_ = ~_099_;
  assign _101_ = _070_ & _071_;
  assign _102_ = i_arg_A[2] | i_arg_B[2];
  assign _103_ = _100_ & _102_;
  assign _104_ = ~_103_;
  assign _105_ = _098_ | _103_;
  assign _106_ = ~_105_;
  assign _107_ = _090_ | _106_;
  assign _108_ = _089_ & _107_;
  assign _109_ = _086_ | _108_;
  assign _110_ = i_arg_B[4] | i_arg_A[4];
  assign _111_ = ~_110_;
  assign _112_ = i_arg_B[4] & i_arg_A[4];
  assign _113_ = _111_ | _112_;
  assign _114_ = _109_ & _113_;
  assign _115_ = _085_ | _114_;
  assign _116_ = _083_ & _115_;
  assign _117_ = _079_ | _116_;
  assign _118_ = _078_ & _117_;
  assign _119_ = _075_ | _118_;
  assign _120_ = _074_ ^ i_arg_A[7];
  assign _121_ = i_arg_B[7] ^ i_arg_A[7];
  assign cache_status[3] = _119_ & _121_;
  assign cache_result[0] = _073_ ^ i_arg_B[0];
  assign _122_ = _092_ | _120_;
  assign _123_ = i_arg_A[0] | i_arg_B[0];
  assign _124_ = _094_ | _123_;
  assign _125_ = _093_ & _124_;
  assign _126_ = ~_125_;
  assign _127_ = _100_ & _126_;
  assign _128_ = _099_ | _125_;
  assign _129_ = _088_ & _102_;
  assign _130_ = _087_ | _129_;
  assign _131_ = _128_ & _129_;
  assign _132_ = _087_ | _131_;
  assign _133_ = _112_ | _132_;
  assign _134_ = _081_ & _110_;
  assign _135_ = _080_ | _134_;
  assign _136_ = _133_ & _134_;
  assign _137_ = _080_ | _136_;
  assign _000_ = _078_ | cache_result[0];
  assign _001_ = _096_ | _000_;
  assign _002_ = _083_ | _113_;
  assign _003_ = _089_ | _104_;
  assign _004_ = _002_ | _003_;
  assign _005_ = _001_ | _004_;
  assign _006_ = _076_ & _005_;
  assign _007_ = _137_ & _006_;
  assign _008_ = _077_ | _007_;
  assign _009_ = ~_008_;
  assign _010_ = i_arg_A[0] & i_arg_B[0];
  assign _011_ = _008_ | _010_;
  assign _012_ = ~_011_;
  assign _013_ = _123_ & _008_;
  assign _014_ = _121_ | _013_;
  assign _015_ = _012_ | _014_;
  assign _016_ = _122_ & _015_;
  assign cache_result[1] = _095_ ^ _016_;
  assign _017_ = _098_ & _121_;
  assign _018_ = _125_ | _009_;
  assign _019_ = _093_ & _010_;
  assign _020_ = _094_ | _019_;
  assign _021_ = ~_020_;
  assign _022_ = _008_ | _021_;
  assign _023_ = _120_ & _022_;
  assign _024_ = _018_ & _023_;
  assign _025_ = _017_ | _024_;
  assign cache_result[2] = _103_ ^ _025_;
  assign _026_ = _102_ & _020_;
  assign _027_ = _099_ | _026_;
  assign _028_ = _009_ & _027_;
  assign _029_ = _101_ | _127_;
  assign _030_ = _008_ & _029_;
  assign _031_ = _107_ | _120_;
  assign _032_ = _121_ | _030_;
  assign _033_ = _028_ | _032_;
  assign _034_ = _031_ & _033_;
  assign cache_result[3] = _089_ ^ _034_;
  assign _035_ = _132_ & _008_;
  assign _036_ = ~_035_;
  assign _037_ = _003_ | _020_;
  assign _038_ = _130_ & _037_;
  assign _039_ = _008_ | _038_;
  assign _040_ = _120_ & _039_;
  assign _041_ = _036_ & _040_;
  assign _042_ = _109_ & _121_;
  assign _043_ = _041_ | _042_;
  assign cache_result[4] = _113_ ^ _043_;
  assign _044_ = _110_ & _038_;
  assign _045_ = _112_ | _044_;
  assign _046_ = _008_ | _045_;
  assign _047_ = ~_046_;
  assign _048_ = _110_ & _133_;
  assign _049_ = _008_ & _048_;
  assign _050_ = _121_ | _049_;
  assign _051_ = _047_ | _050_;
  assign _052_ = _115_ & _121_;
  assign _053_ = ~_052_;
  assign _054_ = _051_ & _053_;
  assign cache_result[5] = _084_ ^ _054_;
  assign _055_ = _077_ & _137_;
  assign _056_ = _002_ | _038_;
  assign _057_ = _135_ & _056_;
  assign _058_ = _078_ ^ _057_;
  assign _059_ = _009_ & _058_;
  assign _060_ = _055_ | _059_;
  assign _061_ = _120_ & _060_;
  assign _062_ = _078_ ^ _117_;
  assign _063_ = _121_ & _062_;
  assign cache_result[6] = _061_ | _063_;
  assign _064_ = i_arg_A[7] & _008_;
  assign _065_ = _074_ & _009_;
  assign cache_result[7] = _064_ | _065_;
  assign cache_status[2:0] = { 2'h0, cache_status[3] };
endmodule

module \$paramod\comparison_1\M=8\K=8 (i_arg_A, i_arg_B, cache_result, cache_status);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire [31:0] a;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  wire [31:0] x;
  assign _000_ = i_arg_B[7] & i_arg_A[7];
  assign _001_ = i_arg_A[5] | i_arg_B[5];
  assign _002_ = i_arg_A[5] & i_arg_B[5];
  assign _003_ = i_arg_A[5] ^ i_arg_B[5];
  assign _004_ = i_arg_A[4] & i_arg_B[4];
  assign _005_ = i_arg_A[4] ^ i_arg_B[4];
  assign _006_ = _003_ & _005_;
  assign _007_ = ~_006_;
  assign _008_ = i_arg_A[3] & i_arg_B[3];
  assign _009_ = ~_008_;
  assign _010_ = i_arg_A[2] & i_arg_B[2];
  assign _011_ = ~_010_;
  assign _012_ = _009_ & _011_;
  assign _013_ = _008_ | _010_;
  assign _014_ = i_arg_A[3] | i_arg_B[3];
  assign _015_ = ~_014_;
  assign _016_ = i_arg_A[2] | i_arg_B[2];
  assign _017_ = _014_ & _016_;
  assign _018_ = ~_017_;
  assign _019_ = _012_ & _017_;
  assign _020_ = _013_ | _018_;
  assign _021_ = i_arg_A[1] & i_arg_B[1];
  assign _022_ = i_arg_A[0] | i_arg_B[0];
  assign _023_ = i_arg_A[1] | i_arg_B[1];
  assign _024_ = _022_ & _023_;
  assign _025_ = _021_ | _024_;
  assign _026_ = ~_025_;
  assign _027_ = _020_ | _026_;
  assign _028_ = _012_ | _015_;
  assign _029_ = _027_ & _028_;
  assign _030_ = _007_ | _029_;
  assign _031_ = _001_ & _004_;
  assign _032_ = _002_ | _031_;
  assign _033_ = ~_032_;
  assign _034_ = _030_ & _033_;
  assign _035_ = i_arg_A[6] | i_arg_B[6];
  assign _036_ = ~_035_;
  assign _037_ = i_arg_A[0] & i_arg_B[0];
  assign _038_ = _021_ | _037_;
  assign _039_ = ~_038_;
  assign _040_ = _024_ & _039_;
  assign _041_ = _006_ & _040_;
  assign _042_ = _019_ & _041_;
  assign _043_ = _036_ | _042_;
  assign _044_ = _034_ | _043_;
  assign _045_ = i_arg_B[7] | i_arg_A[7];
  assign _046_ = i_arg_A[6] & i_arg_B[6];
  assign _047_ = ~_046_;
  assign _048_ = _045_ & _047_;
  assign _049_ = _044_ & _048_;
  assign cache_result[0] = _000_ | _049_;
  assign a = 32'd0;
  assign cache_result[7:1] = 7'h00;
  assign cache_status = 4'h0;
  assign x = 32'd0;
endmodule

module \$paramod\comparison_2\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  assign _000_ = ~i_arg_B[7];
  assign _001_ = ~i_arg_A[7];
  assign _002_ = ~i_arg_B[6];
  assign _003_ = ~i_arg_A[6];
  assign _004_ = ~i_arg_B[5];
  assign _005_ = ~i_arg_A[5];
  assign _006_ = ~i_arg_A[4];
  assign _007_ = ~i_arg_B[4];
  assign _008_ = ~i_arg_B[3];
  assign _009_ = ~i_arg_A[3];
  assign _010_ = ~i_arg_B[2];
  assign _011_ = ~i_arg_A[2];
  assign _012_ = ~i_arg_B[1];
  assign _013_ = ~i_arg_A[1];
  assign _014_ = ~i_arg_B[0];
  assign _015_ = ~i_arg_A[0];
  assign _016_ = i_arg_B[6] & _003_;
  assign _017_ = _002_ | i_arg_A[6];
  assign _018_ = i_arg_B[5] & _005_;
  assign _019_ = _006_ & i_arg_B[4];
  assign _020_ = _018_ | _019_;
  assign _021_ = ~_020_;
  assign _022_ = i_arg_B[3] & _009_;
  assign _023_ = _008_ | i_arg_A[3];
  assign _024_ = i_arg_B[2] & _011_;
  assign _025_ = _010_ | i_arg_A[2];
  assign _026_ = _023_ & _025_;
  assign _027_ = _022_ | _024_;
  assign _028_ = _008_ & i_arg_A[3];
  assign _029_ = i_arg_B[3] | _009_;
  assign _030_ = _010_ & i_arg_A[2];
  assign _031_ = i_arg_B[2] | _011_;
  assign _032_ = _029_ & _031_;
  assign _033_ = _028_ | _030_;
  assign _034_ = _026_ & _032_;
  assign _035_ = _027_ | _033_;
  assign _036_ = i_arg_B[1] & _013_;
  assign _037_ = ~_036_;
  assign _038_ = _014_ & i_arg_A[0];
  assign _039_ = i_arg_B[0] | _015_;
  assign _040_ = _012_ & i_arg_A[1];
  assign _041_ = i_arg_B[1] | _013_;
  assign _042_ = _039_ & _041_;
  assign _043_ = _038_ | _040_;
  assign _044_ = _037_ & _043_;
  assign _045_ = _036_ | _042_;
  assign _046_ = _034_ & _045_;
  assign _047_ = _035_ | _044_;
  assign _048_ = _027_ & _029_;
  assign _049_ = _026_ | _028_;
  assign _050_ = _047_ & _049_;
  assign _051_ = _046_ | _048_;
  assign _052_ = i_arg_A[4] & _007_;
  assign _053_ = ~_052_;
  assign _054_ = _051_ & _053_;
  assign _055_ = _050_ | _052_;
  assign _056_ = _021_ & _055_;
  assign _057_ = _020_ | _054_;
  assign _058_ = _002_ & i_arg_A[6];
  assign _059_ = _004_ & i_arg_A[5];
  assign _060_ = _058_ | _059_;
  assign _061_ = ~_060_;
  assign _062_ = _057_ & _061_;
  assign _063_ = _056_ | _060_;
  assign _064_ = _017_ & _063_;
  assign _065_ = _016_ | _062_;
  assign _066_ = _016_ | _036_;
  assign _067_ = _052_ | _059_;
  assign _068_ = _066_ | _067_;
  assign _069_ = _020_ | _043_;
  assign _070_ = _068_ | _069_;
  assign _071_ = i_arg_B[0] & _015_;
  assign _072_ = i_arg_B[7] & _001_;
  assign _073_ = _058_ | _072_;
  assign _074_ = _071_ | _073_;
  assign _075_ = _035_ | _074_;
  assign _076_ = _070_ | _075_;
  assign _077_ = _065_ & _076_;
  assign _078_ = i_arg_A[7] | _077_;
  assign _079_ = _000_ | _064_;
  assign cache_result[0] = _078_ & _079_;
  assign cache_result[7:1] = 7'h00;
  assign cache_status = 4'h0;
endmodule

module \$paramod\division\M=8\K=8 (i_arg_A, i_arg_B, cache_result, cache_status);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire [31:0] a;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  wire [31:0] x;
  assign _0200_ = ~i_arg_B[6];
  assign _0211_ = ~i_arg_B[5];
  assign _0222_ = ~i_arg_B[4];
  assign _0233_ = ~i_arg_B[3];
  assign _0244_ = ~i_arg_B[1];
  assign _0255_ = ~i_arg_B[0];
  assign _0266_ = ~i_arg_B[7];
  assign _0277_ = ~i_arg_A[6];
  assign _0288_ = ~i_arg_A[5];
  assign _0299_ = ~i_arg_A[4];
  assign _0310_ = ~i_arg_A[3];
  assign _0321_ = ~i_arg_A[1];
  assign _0332_ = ~i_arg_A[0];
  assign _0343_ = ~i_arg_A[7];
  assign _0354_ = i_arg_B[1] | i_arg_B[0];
  assign _0365_ = ~_0354_;
  assign _0376_ = i_arg_B[2] | _0354_;
  assign _0387_ = i_arg_B[3] | _0376_;
  assign _0398_ = i_arg_B[4] | _0387_;
  assign _0409_ = i_arg_B[5] | _0398_;
  assign _0420_ = ~_0409_;
  assign _0431_ = _0200_ & _0420_;
  assign _0442_ = i_arg_B[6] | _0409_;
  assign _0453_ = i_arg_B[7] | _0442_;
  assign cache_status[0] = ~_0453_;
  assign _0472_ = i_arg_B[7] & _0376_;
  assign _0483_ = _0233_ ^ _0472_;
  assign _0491_ = i_arg_B[3] ^ _0472_;
  assign _0498_ = i_arg_B[7] & _0409_;
  assign _0508_ = i_arg_B[6] ^ _0498_;
  assign _0518_ = _0200_ ^ _0498_;
  assign _0519_ = i_arg_B[7] & _0431_;
  assign _0520_ = _0266_ | _0442_;
  assign _0521_ = _0518_ & _0520_;
  assign _0522_ = _0508_ | _0519_;
  assign _0523_ = i_arg_B[7] & _0398_;
  assign _0524_ = _0211_ ^ _0523_;
  assign _0525_ = i_arg_B[5] ^ _0523_;
  assign _0526_ = _0521_ & _0524_;
  assign _0527_ = _0522_ | _0525_;
  assign _0528_ = i_arg_B[7] & _0387_;
  assign _0529_ = i_arg_B[4] ^ _0528_;
  assign _0530_ = _0222_ ^ _0528_;
  assign _0531_ = _0526_ & _0530_;
  assign _0532_ = _0527_ | _0529_;
  assign _0533_ = _0483_ & _0531_;
  assign _0534_ = _0491_ | _0532_;
  assign _0535_ = i_arg_B[7] & _0354_;
  assign _0536_ = _0266_ | _0365_;
  assign _0537_ = i_arg_B[2] ^ _0535_;
  assign _0538_ = i_arg_B[2] ^ _0536_;
  assign _0539_ = _0533_ & _0538_;
  assign _0540_ = _0534_ | _0537_;
  assign _0541_ = i_arg_B[1] & _0266_;
  assign _0542_ = _0244_ | i_arg_B[7];
  assign _0543_ = i_arg_B[1] & i_arg_B[0];
  assign _0544_ = ~_0543_;
  assign _0545_ = _0535_ & _0544_;
  assign _0546_ = _0536_ | _0543_;
  assign _0547_ = _0542_ & _0546_;
  assign _0548_ = _0541_ | _0545_;
  assign _0549_ = i_arg_A[1] | i_arg_A[0];
  assign _0550_ = ~_0549_;
  assign _0551_ = i_arg_A[2] | _0549_;
  assign _0552_ = i_arg_A[3] | _0551_;
  assign _0553_ = i_arg_A[4] | _0552_;
  assign _0554_ = i_arg_A[5] | _0553_;
  assign _0555_ = i_arg_A[6] | _0343_;
  assign _0556_ = _0554_ | _0555_;
  assign _0557_ = ~_0556_;
  assign _0558_ = i_arg_B[0] & _0556_;
  assign _0000_ = ~_0558_;
  assign _0001_ = _0547_ & _0000_;
  assign _0002_ = _0548_ | _0558_;
  assign _0003_ = _0539_ & _0001_;
  assign _0004_ = _0540_ | _0002_;
  assign _0005_ = i_arg_B[0] & _0003_;
  assign _0006_ = _0255_ | _0004_;
  assign _0007_ = _0557_ & _0006_;
  assign _0008_ = _0556_ | _0005_;
  assign _0009_ = _0547_ & _0007_;
  assign _0010_ = _0548_ | _0008_;
  assign _0011_ = _0548_ & _0556_;
  assign _0012_ = _0547_ | _0557_;
  assign _0013_ = _0010_ & _0012_;
  assign _0014_ = _0009_ | _0011_;
  assign _0015_ = i_arg_A[7] & _0554_;
  assign _0016_ = _0277_ ^ _0015_;
  assign _0017_ = i_arg_B[0] & _0016_;
  assign _0018_ = ~_0017_;
  assign _0019_ = _0013_ & _0018_;
  assign _0020_ = _0014_ | _0017_;
  assign _0021_ = _0010_ & _0020_;
  assign _0022_ = _0009_ | _0019_;
  assign _0023_ = _0539_ & _0022_;
  assign _0024_ = _0540_ | _0021_;
  assign _0025_ = _0013_ ^ _0018_;
  assign _0026_ = _0013_ ^ _0017_;
  assign _0027_ = _0023_ & _0025_;
  assign _0028_ = _0024_ | _0026_;
  assign _0029_ = _0007_ & _0024_;
  assign _0030_ = ~_0029_;
  assign _0031_ = _0027_ | _0029_;
  assign _0032_ = _0028_ & _0030_;
  assign _0033_ = i_arg_B[0] & _0023_;
  assign _0034_ = _0016_ | _0033_;
  assign _0035_ = ~_0034_;
  assign _0036_ = _0547_ & _0035_;
  assign _0037_ = _0548_ | _0034_;
  assign _0038_ = _0548_ ^ _0034_;
  assign _0039_ = _0547_ ^ _0034_;
  assign _0040_ = i_arg_A[7] & _0553_;
  assign _0041_ = _0288_ ^ _0040_;
  assign _0042_ = i_arg_B[0] & _0041_;
  assign _0043_ = ~_0042_;
  assign _0044_ = _0038_ & _0043_;
  assign _0045_ = _0039_ | _0042_;
  assign _0046_ = _0037_ & _0045_;
  assign _0047_ = _0036_ | _0044_;
  assign _0048_ = _0534_ | _0538_;
  assign _0049_ = _0047_ & _0048_;
  assign _0050_ = _0540_ & _0046_;
  assign _0051_ = _0049_ | _0050_;
  assign _0052_ = _0031_ & _0051_;
  assign _0053_ = _0538_ & _0031_;
  assign _0054_ = _0537_ | _0032_;
  assign _0055_ = _0046_ & _0054_;
  assign _0056_ = _0047_ | _0053_;
  assign _0057_ = _0537_ & _0032_;
  assign _0058_ = _0538_ | _0031_;
  assign _0059_ = _0533_ & _0058_;
  assign _0060_ = _0534_ | _0057_;
  assign _0061_ = _0056_ & _0059_;
  assign _0062_ = _0055_ | _0060_;
  assign _0063_ = _0039_ ^ _0042_;
  assign _0064_ = _0038_ ^ _0042_;
  assign _0065_ = _0061_ & _0063_;
  assign _0066_ = _0062_ | _0064_;
  assign _0067_ = _0034_ | _0061_;
  assign _0068_ = _0066_ & _0067_;
  assign _0069_ = _0537_ | _0068_;
  assign _0070_ = ~_0069_;
  assign _0071_ = _0537_ ^ _0068_;
  assign _0072_ = _0538_ ^ _0068_;
  assign _0073_ = i_arg_B[0] & _0061_;
  assign _0074_ = _0041_ ^ _0073_;
  assign _0075_ = _0548_ | _0074_;
  assign _0076_ = ~_0075_;
  assign _0077_ = i_arg_A[7] & _0552_;
  assign _0078_ = _0299_ ^ _0077_;
  assign _0079_ = ~_0078_;
  assign _0080_ = i_arg_B[0] & _0078_;
  assign _0081_ = ~_0080_;
  assign _0082_ = _0548_ ^ _0074_;
  assign _0083_ = _0547_ ^ _0074_;
  assign _0084_ = _0081_ & _0082_;
  assign _0085_ = _0080_ | _0083_;
  assign _0086_ = _0075_ & _0085_;
  assign _0087_ = _0076_ | _0084_;
  assign _0088_ = _0071_ & _0087_;
  assign _0089_ = _0072_ | _0086_;
  assign _0090_ = _0069_ & _0089_;
  assign _0091_ = _0070_ | _0088_;
  assign _0092_ = _0483_ | _0532_;
  assign _0093_ = _0533_ & _0090_;
  assign _0094_ = ~_0093_;
  assign _0095_ = _0090_ | _0092_;
  assign _0096_ = _0052_ & _0095_;
  assign _0097_ = ~_0096_;
  assign _0098_ = _0094_ & _0096_;
  assign _0099_ = _0093_ | _0097_;
  assign _0100_ = _0483_ & _0052_;
  assign _0101_ = _0091_ | _0100_;
  assign _0102_ = _0483_ | _0031_;
  assign _0103_ = _0531_ & _0102_;
  assign _0104_ = _0101_ & _0103_;
  assign _0105_ = ~_0104_;
  assign _0106_ = _0068_ | _0104_;
  assign _0107_ = _0066_ & _0106_;
  assign _0108_ = ~_0107_;
  assign _0109_ = _0491_ | _0107_;
  assign _0110_ = ~_0109_;
  assign _0111_ = _0491_ ^ _0107_;
  assign _0112_ = _0483_ ^ _0107_;
  assign _0113_ = _0081_ ^ _0082_;
  assign _0114_ = _0074_ | _0104_;
  assign _0115_ = ~_0114_;
  assign _0116_ = _0104_ & _0113_;
  assign _0117_ = ~_0116_;
  assign _0118_ = _0115_ | _0116_;
  assign _0119_ = _0114_ & _0117_;
  assign _0120_ = _0538_ & _0118_;
  assign _0121_ = ~_0120_;
  assign _0122_ = _0537_ & _0119_;
  assign _0123_ = ~_0122_;
  assign _0124_ = i_arg_B[0] & _0104_;
  assign _0125_ = _0079_ ^ _0124_;
  assign _0126_ = _0078_ ^ _0124_;
  assign _0127_ = _0547_ & _0125_;
  assign _0128_ = _0548_ | _0126_;
  assign _0129_ = _0547_ ^ _0125_;
  assign _0130_ = _0548_ ^ _0125_;
  assign _0131_ = i_arg_A[7] & _0551_;
  assign _0132_ = _0310_ ^ _0131_;
  assign _0133_ = ~_0132_;
  assign _0134_ = i_arg_B[0] & _0132_;
  assign _0135_ = ~_0134_;
  assign _0136_ = _0129_ & _0135_;
  assign _0137_ = _0130_ | _0134_;
  assign _0138_ = _0128_ & _0137_;
  assign _0139_ = _0127_ | _0136_;
  assign _0140_ = _0123_ & _0139_;
  assign _0141_ = _0122_ | _0138_;
  assign _0142_ = _0121_ & _0141_;
  assign _0143_ = _0120_ | _0140_;
  assign _0144_ = _0111_ & _0143_;
  assign _0145_ = _0112_ | _0142_;
  assign _0146_ = _0109_ & _0145_;
  assign _0147_ = _0110_ | _0144_;
  assign _0148_ = _0530_ & _0147_;
  assign _0149_ = _0529_ | _0146_;
  assign _0150_ = _0529_ & _0146_;
  assign _0151_ = _0530_ | _0147_;
  assign _0152_ = _0526_ & _0151_;
  assign _0153_ = _0527_ | _0150_;
  assign _0154_ = _0149_ & _0152_;
  assign _0155_ = _0148_ | _0153_;
  assign _0156_ = _0098_ & _0155_;
  assign _0157_ = _0099_ | _0154_;
  assign _0158_ = _0524_ & _0156_;
  assign _0159_ = _0525_ | _0157_;
  assign _0160_ = _0525_ & _0099_;
  assign _0161_ = _0524_ | _0098_;
  assign _0162_ = _0159_ & _0161_;
  assign _0163_ = _0158_ | _0160_;
  assign _0164_ = _0099_ & _0149_;
  assign _0165_ = _0098_ | _0148_;
  assign _0166_ = _0152_ & _0165_;
  assign _0167_ = _0153_ | _0164_;
  assign _0168_ = _0108_ & _0167_;
  assign _0169_ = _0107_ | _0166_;
  assign _0170_ = _0065_ | _0168_;
  assign _0171_ = _0066_ & _0169_;
  assign _0172_ = _0530_ & _0170_;
  assign _0173_ = _0529_ | _0171_;
  assign _0174_ = _0530_ ^ _0170_;
  assign _0175_ = _0529_ ^ _0170_;
  assign _0176_ = _0120_ | _0122_;
  assign _0177_ = _0138_ ^ _0176_;
  assign _0178_ = _0167_ | _0177_;
  assign _0179_ = ~_0178_;
  assign _0180_ = _0119_ & _0167_;
  assign _0181_ = _0118_ | _0166_;
  assign _0182_ = _0178_ & _0181_;
  assign _0183_ = _0179_ | _0180_;
  assign _0184_ = _0483_ & _0182_;
  assign _0185_ = ~_0184_;
  assign _0186_ = _0491_ & _0183_;
  assign _0187_ = ~_0186_;
  assign _0188_ = _0130_ ^ _0134_;
  assign _0189_ = _0129_ ^ _0134_;
  assign _0190_ = _0166_ & _0189_;
  assign _0191_ = _0167_ | _0188_;
  assign _0192_ = _0126_ & _0167_;
  assign _0193_ = ~_0192_;
  assign _0194_ = _0191_ & _0193_;
  assign _0195_ = _0190_ | _0192_;
  assign _0196_ = _0538_ & _0194_;
  assign _0197_ = _0537_ | _0195_;
  assign _0198_ = i_arg_B[0] & _0166_;
  assign _0199_ = _0133_ ^ _0198_;
  assign _0201_ = _0132_ ^ _0198_;
  assign _0202_ = _0547_ & _0199_;
  assign _0203_ = _0548_ | _0201_;
  assign _0204_ = _0343_ | _0550_;
  assign _0205_ = i_arg_A[2] ^ _0204_;
  assign _0206_ = ~_0205_;
  assign _0207_ = i_arg_B[0] & _0205_;
  assign _0208_ = ~_0207_;
  assign _0209_ = _0547_ ^ _0199_;
  assign _0210_ = _0548_ ^ _0199_;
  assign _0212_ = _0208_ & _0209_;
  assign _0213_ = _0207_ | _0210_;
  assign _0214_ = _0203_ & _0213_;
  assign _0215_ = _0202_ | _0212_;
  assign _0216_ = _0537_ ^ _0195_;
  assign _0217_ = _0538_ ^ _0195_;
  assign _0218_ = _0215_ & _0216_;
  assign _0219_ = _0214_ | _0217_;
  assign _0220_ = _0197_ & _0219_;
  assign _0221_ = _0196_ | _0218_;
  assign _0223_ = _0187_ & _0221_;
  assign _0224_ = _0186_ | _0220_;
  assign _0225_ = _0185_ & _0224_;
  assign _0226_ = _0184_ | _0223_;
  assign _0227_ = _0174_ & _0226_;
  assign _0228_ = _0175_ | _0225_;
  assign _0229_ = _0173_ & _0228_;
  assign _0230_ = _0172_ | _0227_;
  assign _0231_ = _0162_ & _0230_;
  assign _0232_ = _0163_ | _0229_;
  assign _0234_ = _0159_ & _0232_;
  assign _0235_ = _0158_ | _0231_;
  assign _0236_ = _0521_ & _0235_;
  assign _0237_ = _0522_ | _0234_;
  assign _0238_ = _0156_ & _0237_;
  assign _0239_ = _0027_ | _0238_;
  assign _0240_ = ~_0239_;
  assign _0241_ = _0518_ & _0239_;
  assign _0242_ = _0508_ | _0240_;
  assign _0243_ = _0170_ & _0237_;
  assign _0245_ = _0171_ | _0236_;
  assign _0246_ = _0065_ | _0243_;
  assign _0247_ = _0066_ & _0245_;
  assign _0248_ = _0524_ & _0246_;
  assign _0249_ = _0525_ | _0247_;
  assign _0250_ = _0524_ ^ _0246_;
  assign _0251_ = _0525_ ^ _0246_;
  assign _0252_ = _0184_ | _0186_;
  assign _0253_ = _0220_ ^ _0252_;
  assign _0254_ = _0237_ | _0253_;
  assign _0256_ = ~_0254_;
  assign _0257_ = _0183_ & _0237_;
  assign _0258_ = _0182_ | _0236_;
  assign _0259_ = _0254_ & _0258_;
  assign _0260_ = _0256_ | _0257_;
  assign _0261_ = _0530_ & _0259_;
  assign _0262_ = ~_0261_;
  assign _0263_ = _0529_ & _0260_;
  assign _0264_ = ~_0263_;
  assign _0265_ = _0215_ ^ _0216_;
  assign _0267_ = _0214_ ^ _0216_;
  assign _0268_ = _0236_ & _0267_;
  assign _0269_ = _0237_ | _0265_;
  assign _0270_ = _0195_ & _0237_;
  assign _0271_ = _0194_ | _0236_;
  assign _0272_ = _0269_ & _0271_;
  assign _0273_ = _0268_ | _0270_;
  assign _0274_ = _0483_ & _0272_;
  assign _0275_ = _0491_ | _0273_;
  assign _0276_ = _0483_ ^ _0272_;
  assign _0278_ = _0491_ ^ _0272_;
  assign _0279_ = _0208_ ^ _0209_;
  assign _0280_ = _0207_ ^ _0209_;
  assign _0281_ = _0236_ & _0280_;
  assign _0282_ = _0237_ | _0279_;
  assign _0283_ = _0201_ & _0237_;
  assign _0284_ = _0199_ | _0236_;
  assign _0285_ = _0282_ & _0284_;
  assign _0286_ = _0281_ | _0283_;
  assign _0287_ = _0538_ & _0285_;
  assign _0289_ = _0537_ | _0286_;
  assign _0290_ = _0537_ & _0286_;
  assign _0291_ = _0538_ | _0285_;
  assign _0292_ = i_arg_B[0] & _0236_;
  assign _0293_ = _0205_ ^ _0292_;
  assign _0294_ = _0206_ ^ _0292_;
  assign _0295_ = _0547_ & _0294_;
  assign _0296_ = _0548_ | _0293_;
  assign _0297_ = _0321_ | i_arg_A[7];
  assign _0298_ = i_arg_A[1] & i_arg_A[0];
  assign _0300_ = _0204_ | _0298_;
  assign _0301_ = _0297_ & _0300_;
  assign _0302_ = i_arg_B[0] & _0301_;
  assign _0303_ = ~_0302_;
  assign _0304_ = _0548_ ^ _0293_;
  assign _0305_ = _0547_ ^ _0293_;
  assign _0306_ = _0303_ & _0304_;
  assign _0307_ = _0302_ | _0305_;
  assign _0308_ = _0296_ & _0307_;
  assign _0309_ = _0295_ | _0306_;
  assign _0311_ = _0291_ & _0309_;
  assign _0312_ = _0290_ | _0308_;
  assign _0313_ = _0289_ & _0312_;
  assign _0314_ = _0287_ | _0311_;
  assign _0315_ = _0276_ & _0314_;
  assign _0316_ = _0278_ | _0313_;
  assign _0317_ = _0275_ & _0316_;
  assign _0318_ = _0274_ | _0315_;
  assign _0319_ = _0264_ & _0318_;
  assign _0320_ = _0263_ | _0317_;
  assign _0322_ = _0262_ & _0320_;
  assign _0323_ = _0261_ | _0319_;
  assign _0324_ = _0250_ & _0323_;
  assign _0325_ = _0251_ | _0322_;
  assign _0326_ = _0249_ & _0325_;
  assign _0327_ = _0248_ | _0324_;
  assign _0328_ = _0242_ & _0326_;
  assign _0329_ = _0241_ | _0327_;
  assign _0330_ = _0508_ & _0240_;
  assign _0331_ = _0518_ | _0239_;
  assign _0333_ = _0520_ & _0331_;
  assign _0334_ = _0519_ | _0330_;
  assign _0335_ = _0329_ & _0333_;
  assign _0336_ = _0328_ | _0334_;
  assign _0337_ = _0287_ | _0290_;
  assign _0338_ = _0308_ ^ _0337_;
  assign _0339_ = _0336_ | _0338_;
  assign _0340_ = ~_0339_;
  assign _0341_ = _0286_ & _0336_;
  assign _0342_ = ~_0341_;
  assign _0344_ = _0339_ & _0342_;
  assign _0345_ = _0340_ | _0341_;
  assign _0346_ = _0491_ & _0345_;
  assign _0347_ = _0483_ | _0344_;
  assign _0348_ = _0303_ ^ _0304_;
  assign _0349_ = _0302_ ^ _0304_;
  assign _0350_ = _0335_ & _0349_;
  assign _0351_ = _0336_ | _0348_;
  assign _0352_ = _0293_ & _0336_;
  assign _0353_ = _0294_ | _0335_;
  assign _0355_ = _0351_ & _0353_;
  assign _0356_ = _0350_ | _0352_;
  assign _0357_ = _0538_ & _0355_;
  assign _0358_ = _0537_ | _0356_;
  assign _0359_ = i_arg_B[0] & _0332_;
  assign _0360_ = _0255_ | i_arg_A[0];
  assign _0361_ = _0547_ & _0360_;
  assign _0362_ = _0548_ | _0359_;
  assign _0363_ = i_arg_B[0] & _0335_;
  assign _0364_ = _0255_ | _0336_;
  assign _0366_ = _0301_ ^ _0364_;
  assign _0367_ = _0301_ ^ _0363_;
  assign _0368_ = _0362_ & _0367_;
  assign _0369_ = _0361_ | _0366_;
  assign _0370_ = _0537_ & _0356_;
  assign _0371_ = _0538_ | _0355_;
  assign _0372_ = _0548_ & _0359_;
  assign _0373_ = _0547_ | _0360_;
  assign _0374_ = _0371_ & _0373_;
  assign _0375_ = _0370_ | _0372_;
  assign _0377_ = _0369_ & _0374_;
  assign _0378_ = _0368_ | _0375_;
  assign _0379_ = _0358_ & _0378_;
  assign _0380_ = _0357_ | _0377_;
  assign _0381_ = _0347_ & _0380_;
  assign _0382_ = _0346_ | _0379_;
  assign _0383_ = _0278_ ^ _0313_;
  assign _0384_ = _0336_ | _0383_;
  assign _0385_ = ~_0384_;
  assign _0386_ = _0273_ & _0336_;
  assign _0388_ = ~_0386_;
  assign _0389_ = _0384_ & _0388_;
  assign _0390_ = _0385_ | _0386_;
  assign _0391_ = _0530_ & _0389_;
  assign _0392_ = _0529_ | _0390_;
  assign _0393_ = _0483_ & _0344_;
  assign _0394_ = _0491_ | _0345_;
  assign _0395_ = _0392_ & _0394_;
  assign _0396_ = _0391_ | _0393_;
  assign _0397_ = _0382_ & _0395_;
  assign _0399_ = _0381_ | _0396_;
  assign _0400_ = _0261_ | _0263_;
  assign _0401_ = _0317_ ^ _0400_;
  assign _0402_ = _0336_ | _0401_;
  assign _0403_ = ~_0402_;
  assign _0404_ = _0260_ & _0336_;
  assign _0405_ = ~_0404_;
  assign _0406_ = _0402_ & _0405_;
  assign _0407_ = _0403_ | _0404_;
  assign _0408_ = _0525_ & _0407_;
  assign _0410_ = _0524_ | _0406_;
  assign _0411_ = _0529_ & _0390_;
  assign _0412_ = _0530_ | _0389_;
  assign _0413_ = _0410_ & _0412_;
  assign _0414_ = _0408_ | _0411_;
  assign _0415_ = _0399_ & _0413_;
  assign _0416_ = _0397_ | _0414_;
  assign _0417_ = _0246_ & _0336_;
  assign _0418_ = ~_0417_;
  assign _0419_ = _0065_ | _0417_;
  assign _0421_ = _0066_ & _0418_;
  assign _0422_ = _0518_ & _0419_;
  assign _0423_ = _0508_ | _0421_;
  assign _0424_ = _0524_ & _0406_;
  assign _0425_ = _0525_ | _0407_;
  assign _0426_ = _0423_ & _0425_;
  assign _0427_ = _0422_ | _0424_;
  assign _0428_ = _0416_ & _0426_;
  assign _0429_ = _0415_ | _0427_;
  assign _0430_ = _0508_ & _0421_;
  assign _0432_ = _0518_ | _0419_;
  assign _0433_ = _0239_ & _0326_;
  assign _0434_ = ~_0433_;
  assign _0435_ = _0242_ & _0434_;
  assign _0436_ = _0241_ | _0433_;
  assign _0437_ = _0519_ & _0435_;
  assign _0438_ = _0520_ | _0436_;
  assign _0439_ = _0432_ & _0438_;
  assign _0440_ = _0430_ | _0437_;
  assign _0441_ = _0429_ & _0439_;
  assign _0443_ = _0428_ | _0440_;
  assign _0444_ = _0518_ & _0326_;
  assign _0445_ = ~_0444_;
  assign _0446_ = _0520_ & _0436_;
  assign _0447_ = _0519_ | _0435_;
  assign _0448_ = _0445_ & _0446_;
  assign _0449_ = _0444_ | _0447_;
  assign _0450_ = _0443_ & _0449_;
  assign _0451_ = _0441_ | _0448_;
  assign _0452_ = i_arg_B[7] ^ i_arg_A[7];
  assign _0454_ = _0266_ ^ i_arg_A[7];
  assign _0455_ = _0336_ & _0450_;
  assign _0456_ = _0335_ | _0451_;
  assign _0457_ = _0237_ & _0455_;
  assign _0458_ = _0236_ | _0456_;
  assign _0459_ = _0167_ & _0457_;
  assign _0460_ = _0104_ | _0166_;
  assign _0461_ = _0105_ & _0459_;
  assign _0462_ = _0458_ | _0460_;
  assign _0463_ = _0062_ & _0461_;
  assign _0464_ = _0454_ | _0463_;
  assign _0465_ = _0024_ ^ _0464_;
  assign _0466_ = _0452_ & _0462_;
  assign _0467_ = _0061_ ^ _0466_;
  assign _0468_ = _0105_ | _0459_;
  assign cache_result[4] = _0466_ & _0468_;
  assign _0469_ = _0167_ ^ _0457_;
  assign cache_result[3] = _0452_ & _0469_;
  assign _0470_ = _0454_ & _0460_;
  assign _0471_ = cache_result[3] | _0470_;
  assign _0473_ = cache_result[4] | _0471_;
  assign _0474_ = _0467_ | _0473_;
  assign _0475_ = _0465_ | _0474_;
  assign _0476_ = _0004_ & _0024_;
  assign _0477_ = _0463_ & _0476_;
  assign _0478_ = cache_status[0] | _0454_;
  assign _0479_ = _0477_ | _0478_;
  assign _0480_ = _0004_ | _0452_;
  assign _0481_ = _0479_ & _0480_;
  assign _0482_ = ~_0481_;
  assign cache_status[3] = _0475_ & _0481_;
  assign _0484_ = ~cache_status[3];
  assign _0485_ = _0453_ & _0484_;
  assign _0486_ = cache_status[0] | cache_status[3];
  assign cache_result[0] = _0451_ & _0485_;
  assign _0487_ = _0451_ & _0452_;
  assign _0488_ = _0335_ ^ _0487_;
  assign _0489_ = ~_0488_;
  assign _0490_ = _0486_ | _0489_;
  assign cache_result[1] = ~_0490_;
  assign _0492_ = _0452_ & _0456_;
  assign _0493_ = _0236_ ^ _0492_;
  assign cache_result[2] = _0485_ & _0493_;
  assign cache_result[5] = _0467_ & _0485_;
  assign cache_result[7] = _0453_ & _0482_;
  assign _0494_ = ~cache_result[7];
  assign cache_result[6] = _0465_ & cache_result[7];
  assign _0495_ = ~cache_result[6];
  assign _0496_ = _0451_ & cache_result[1];
  assign _0497_ = _0450_ | _0490_;
  assign _0499_ = cache_result[6] & _0496_;
  assign _0500_ = cache_result[4] & cache_result[5];
  assign _0501_ = cache_result[3] & cache_result[2];
  assign _0502_ = _0500_ & _0501_;
  assign cache_status[2] = _0499_ & _0502_;
  assign _0503_ = cache_result[4] ^ cache_result[5];
  assign _0504_ = _0495_ ^ _0503_;
  assign _0505_ = cache_result[6] ^ _0503_;
  assign _0506_ = _0456_ & _0485_;
  assign _0507_ = _0497_ & _0506_;
  assign _0509_ = cache_result[3] | cache_result[2];
  assign _0510_ = cache_result[3] ^ cache_result[2];
  assign _0511_ = _0507_ ^ _0510_;
  assign _0512_ = _0505_ ^ _0511_;
  assign _0513_ = _0504_ ^ _0511_;
  assign _0514_ = cache_result[7] | _0513_;
  assign _0515_ = _0506_ | _0509_;
  assign _0516_ = _0494_ & _0515_;
  assign _0517_ = _0512_ | _0516_;
  assign cache_status[1] = _0514_ & _0517_;
  assign a = 32'd8;
  assign x[31:8] = 24'h000000;
endmodule

module \$paramod\division_1\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  assign _160_ = ~i_arg_B[6];
  assign _161_ = ~i_arg_A[5];
  assign _162_ = ~i_arg_A[4];
  assign _163_ = ~i_arg_B[1];
  assign _164_ = ~i_arg_A[6];
  assign _165_ = ~i_arg_B[0];
  assign _166_ = ~i_arg_A[3];
  assign _167_ = ~i_arg_A[2];
  assign _168_ = ~i_arg_B[3];
  assign _169_ = ~i_arg_B[2];
  assign _170_ = ~i_arg_B[5];
  assign _171_ = ~i_arg_B[4];
  assign _172_ = _165_ | i_arg_A[0];
  assign _173_ = _163_ | _172_;
  assign _174_ = i_arg_B[6] | i_arg_B[5];
  assign _175_ = i_arg_B[5] | i_arg_B[4];
  assign _176_ = i_arg_B[4] | _174_;
  assign _177_ = ~_176_;
  assign _178_ = i_arg_B[3] | i_arg_B[2];
  assign _179_ = _175_ | _178_;
  assign _180_ = ~_179_;
  assign _181_ = i_arg_A[6] | _165_;
  assign _182_ = i_arg_B[6] | i_arg_B[1];
  assign _183_ = ~_182_;
  assign _184_ = _181_ & _183_;
  assign cache_result[6] = _180_ & _184_;
  assign _185_ = i_arg_B[0] & cache_result[6];
  assign _186_ = _164_ | _185_;
  assign _187_ = i_arg_B[1] | _186_;
  assign _188_ = ~_187_;
  assign _189_ = _161_ & i_arg_B[0];
  assign _190_ = ~_189_;
  assign _191_ = i_arg_B[1] ^ _186_;
  assign _192_ = _190_ & _191_;
  assign _193_ = _188_ | _192_;
  assign _194_ = i_arg_B[6] | _179_;
  assign _195_ = ~_194_;
  assign cache_result[5] = _193_ & _195_;
  assign _196_ = _190_ ^ _191_;
  assign _197_ = _186_ | cache_result[5];
  assign _198_ = ~_197_;
  assign _199_ = cache_result[5] & _196_;
  assign _200_ = ~_199_;
  assign _201_ = _198_ | _199_;
  assign _202_ = _197_ & _200_;
  assign _203_ = i_arg_B[0] & cache_result[5];
  assign _204_ = ~_203_;
  assign _205_ = i_arg_A[5] & _204_;
  assign _206_ = _161_ | _203_;
  assign _207_ = _163_ & _205_;
  assign _208_ = i_arg_B[1] ^ _206_;
  assign _209_ = _162_ & i_arg_B[0];
  assign _210_ = ~_209_;
  assign _211_ = _208_ & _210_;
  assign _212_ = _207_ | _211_;
  assign _213_ = i_arg_B[3] | _176_;
  assign _214_ = i_arg_B[2] ^ _212_;
  assign _215_ = _213_ | _214_;
  assign _216_ = _201_ & _215_;
  assign _217_ = ~_216_;
  assign _218_ = _168_ & _216_;
  assign _219_ = i_arg_B[3] | _217_;
  assign _220_ = _168_ | _201_;
  assign _221_ = _219_ & _220_;
  assign _222_ = _169_ & _201_;
  assign _223_ = _212_ | _222_;
  assign _224_ = i_arg_B[2] & _202_;
  assign _225_ = _213_ | _224_;
  assign _226_ = ~_225_;
  assign cache_result[4] = _223_ & _226_;
  assign _227_ = ~cache_result[4];
  assign _228_ = _208_ ^ _210_;
  assign _229_ = _227_ | _228_;
  assign _230_ = _205_ | cache_result[4];
  assign _000_ = _229_ & _230_;
  assign _001_ = _169_ & _000_;
  assign _002_ = i_arg_B[2] ^ _000_;
  assign _003_ = ~_002_;
  assign _004_ = i_arg_B[0] & cache_result[4];
  assign _005_ = _162_ ^ _004_;
  assign _006_ = i_arg_A[4] ^ _004_;
  assign _007_ = _163_ & _006_;
  assign _008_ = i_arg_B[0] & _166_;
  assign _009_ = _165_ | i_arg_A[3];
  assign _010_ = i_arg_B[1] ^ _005_;
  assign _011_ = _009_ & _010_;
  assign _012_ = _007_ | _011_;
  assign _013_ = _003_ & _012_;
  assign _014_ = _001_ | _013_;
  assign _015_ = _221_ & _014_;
  assign _016_ = _218_ | _015_;
  assign cache_result[3] = _177_ & _016_;
  assign _017_ = ~cache_result[3];
  assign _018_ = _003_ ^ _012_;
  assign _019_ = _017_ | _018_;
  assign _020_ = _000_ | cache_result[3];
  assign _021_ = _019_ & _020_;
  assign _022_ = ~_021_;
  assign _023_ = _168_ & _021_;
  assign _024_ = i_arg_B[3] | _022_;
  assign _025_ = i_arg_B[3] ^ _021_;
  assign _026_ = _009_ ^ _010_;
  assign _027_ = cache_result[3] & _026_;
  assign _028_ = ~_027_;
  assign _029_ = _005_ | cache_result[3];
  assign _030_ = _028_ & _029_;
  assign _031_ = i_arg_B[2] | _030_;
  assign _032_ = i_arg_B[2] ^ _030_;
  assign _033_ = ~_032_;
  assign _034_ = i_arg_B[0] & cache_result[3];
  assign _035_ = ~_034_;
  assign _036_ = i_arg_A[3] & _035_;
  assign _037_ = _166_ | _034_;
  assign _038_ = _008_ & cache_result[3];
  assign _039_ = _009_ | _017_;
  assign _040_ = _037_ & _039_;
  assign _041_ = _036_ | _038_;
  assign _042_ = i_arg_B[1] | _040_;
  assign _043_ = i_arg_B[1] & _040_;
  assign _044_ = i_arg_B[0] & _167_;
  assign _045_ = _043_ | _044_;
  assign _046_ = _042_ & _045_;
  assign _047_ = _033_ | _046_;
  assign _048_ = _031_ & _047_;
  assign _049_ = _025_ | _048_;
  assign _050_ = ~_049_;
  assign _051_ = _024_ & _049_;
  assign _052_ = _023_ | _050_;
  assign _053_ = _216_ & _017_;
  assign _054_ = _199_ | _053_;
  assign _055_ = ~_054_;
  assign _056_ = i_arg_B[4] | _055_;
  assign _057_ = _051_ & _056_;
  assign _058_ = i_arg_B[4] & _055_;
  assign _059_ = _174_ | _058_;
  assign _060_ = _057_ | _059_;
  assign cache_result[2] = ~_060_;
  assign _061_ = _025_ ^ _048_;
  assign _062_ = _060_ | _061_;
  assign _063_ = _021_ | cache_result[2];
  assign _064_ = _062_ & _063_;
  assign _065_ = ~_064_;
  assign _066_ = i_arg_B[4] | _065_;
  assign _067_ = i_arg_B[4] ^ _064_;
  assign _068_ = _033_ ^ _046_;
  assign _069_ = _030_ | cache_result[2];
  assign _070_ = ~_069_;
  assign _071_ = cache_result[2] & _068_;
  assign _072_ = _070_ | _071_;
  assign _073_ = ~_072_;
  assign _074_ = i_arg_B[3] | _073_;
  assign _075_ = i_arg_B[3] ^ _072_;
  assign _076_ = _041_ | cache_result[2];
  assign _077_ = _163_ ^ _040_;
  assign _078_ = _044_ ^ _077_;
  assign _079_ = _060_ | _078_;
  assign _080_ = _076_ & _079_;
  assign _081_ = ~_080_;
  assign _082_ = _169_ & _080_;
  assign _083_ = ~_082_;
  assign _084_ = i_arg_B[2] & _081_;
  assign _085_ = _165_ | _060_;
  assign _086_ = i_arg_A[2] & _085_;
  assign _087_ = _044_ & cache_result[2];
  assign _088_ = _086_ | _087_;
  assign _089_ = ~_088_;
  assign _090_ = i_arg_B[1] | _089_;
  assign _091_ = _165_ | i_arg_A[1];
  assign _092_ = ~_091_;
  assign _093_ = _163_ ^ _088_;
  assign _094_ = i_arg_B[1] ^ _088_;
  assign _095_ = _092_ | _094_;
  assign _096_ = _090_ & _095_;
  assign _097_ = _084_ | _096_;
  assign _098_ = _083_ & _097_;
  assign _099_ = _075_ | _098_;
  assign _100_ = _074_ & _099_;
  assign _101_ = _067_ | _100_;
  assign _102_ = _066_ & _101_;
  assign _103_ = _176_ & _051_;
  assign _104_ = _171_ | _174_;
  assign _105_ = _052_ & _104_;
  assign _106_ = _103_ | _105_;
  assign _107_ = _054_ & _106_;
  assign _108_ = ~_107_;
  assign _109_ = i_arg_B[5] & _055_;
  assign _110_ = i_arg_B[6] | _109_;
  assign _111_ = _102_ | _110_;
  assign _112_ = _174_ | _108_;
  assign _113_ = _111_ & _112_;
  assign cache_result[1] = ~_113_;
  assign _114_ = i_arg_B[0] & cache_result[1];
  assign _115_ = i_arg_A[1] ^ _114_;
  assign _116_ = _173_ & _115_;
  assign _117_ = _091_ ^ _093_;
  assign _118_ = _113_ | _117_;
  assign _119_ = _088_ | cache_result[1];
  assign _120_ = _118_ & _119_;
  assign _121_ = _169_ & _120_;
  assign _122_ = _163_ & _172_;
  assign _123_ = _116_ | _122_;
  assign _124_ = _121_ | _123_;
  assign _125_ = _082_ | _084_;
  assign _126_ = _096_ ^ _125_;
  assign _127_ = cache_result[1] & _126_;
  assign _128_ = _080_ & _113_;
  assign _129_ = _127_ | _128_;
  assign _130_ = _168_ | _129_;
  assign _131_ = _169_ | _120_;
  assign _132_ = _130_ & _131_;
  assign _133_ = _124_ & _132_;
  assign _134_ = _075_ ^ _098_;
  assign _135_ = _113_ | _134_;
  assign _136_ = _072_ | cache_result[1];
  assign _137_ = _135_ & _136_;
  assign _138_ = _171_ & _137_;
  assign _139_ = _168_ & _129_;
  assign _140_ = _138_ | _139_;
  assign _141_ = _133_ | _140_;
  assign _142_ = _067_ ^ _100_;
  assign _143_ = _113_ | _142_;
  assign _144_ = _064_ | cache_result[1];
  assign _145_ = _143_ & _144_;
  assign _146_ = _170_ | _145_;
  assign _147_ = _171_ | _137_;
  assign _148_ = _146_ & _147_;
  assign _149_ = _141_ & _148_;
  assign _150_ = _107_ & _113_;
  assign _151_ = _199_ | _150_;
  assign _152_ = _160_ & _151_;
  assign _153_ = _170_ & _145_;
  assign _154_ = _152_ | _153_;
  assign _155_ = _149_ | _154_;
  assign _156_ = _160_ | _054_;
  assign cache_result[0] = _155_ & _156_;
  assign _157_ = i_arg_B[0] | i_arg_B[7];
  assign _158_ = _182_ | _157_;
  assign _159_ = _179_ | _158_;
  assign cache_status[3] = ~_159_;
  assign cache_result[7] = i_arg_B[7] ^ i_arg_A[7];
  assign cache_status[2:0] = 3'h0;
endmodule

module \$paramod\right_shift_1\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  assign cache_status[3] = ~i_arg_B[7];
  assign _000_ = ~i_arg_B[2];
  assign _001_ = ~i_arg_B[1];
  assign _002_ = ~i_arg_B[0];
  assign _003_ = i_arg_B[7] & i_arg_B[5];
  assign _004_ = i_arg_B[4] & i_arg_B[6];
  assign _005_ = _003_ & _004_;
  assign _006_ = _002_ & i_arg_A[7];
  assign _007_ = i_arg_B[0] & i_arg_A[6];
  assign _008_ = _006_ | _007_;
  assign _009_ = _005_ & _008_;
  assign _010_ = i_arg_B[1] | _009_;
  assign _011_ = _002_ & i_arg_A[5];
  assign _012_ = i_arg_B[0] & i_arg_A[4];
  assign _013_ = _011_ | _012_;
  assign _014_ = _005_ & _013_;
  assign _015_ = _001_ | _014_;
  assign _016_ = _010_ & _015_;
  assign _017_ = _002_ & i_arg_A[3];
  assign _018_ = i_arg_B[0] & i_arg_A[2];
  assign _019_ = _017_ | _018_;
  assign _020_ = _005_ & _019_;
  assign _021_ = i_arg_B[1] | _020_;
  assign _022_ = _002_ | i_arg_A[0];
  assign _023_ = i_arg_B[0] | i_arg_A[1];
  assign _024_ = _022_ & _023_;
  assign _025_ = _005_ & _024_;
  assign _026_ = _001_ | _025_;
  assign _027_ = _000_ & _016_;
  assign _028_ = i_arg_B[2] & _026_;
  assign _029_ = _021_ & _028_;
  assign _030_ = _027_ | _029_;
  assign cache_result[0] = i_arg_B[3] & _030_;
  assign _031_ = i_arg_B[0] & i_arg_A[7];
  assign _032_ = _005_ & _031_;
  assign _033_ = i_arg_B[1] | _032_;
  assign _034_ = _002_ & i_arg_A[6];
  assign _035_ = i_arg_B[0] & i_arg_A[5];
  assign _036_ = _034_ | _035_;
  assign _037_ = _005_ & _036_;
  assign _038_ = _001_ | _037_;
  assign _039_ = _033_ & _038_;
  assign _040_ = _002_ | i_arg_A[1];
  assign _041_ = i_arg_B[0] | i_arg_A[2];
  assign _042_ = _040_ & _041_;
  assign _043_ = _005_ & _042_;
  assign _044_ = _001_ | _043_;
  assign _045_ = _002_ & i_arg_A[4];
  assign _046_ = i_arg_B[0] & i_arg_A[3];
  assign _047_ = _045_ | _046_;
  assign _048_ = _005_ & _047_;
  assign _049_ = i_arg_B[1] | _048_;
  assign _050_ = i_arg_B[2] & _049_;
  assign _051_ = _044_ & _050_;
  assign _052_ = _000_ & _039_;
  assign _053_ = _051_ | _052_;
  assign cache_result[1] = i_arg_B[3] & _053_;
  assign _054_ = _001_ | _020_;
  assign _055_ = i_arg_B[1] | _014_;
  assign _056_ = _054_ & _055_;
  assign _057_ = _000_ | _056_;
  assign _058_ = i_arg_B[1] & _009_;
  assign _059_ = i_arg_B[2] | _058_;
  assign _060_ = i_arg_B[3] & _059_;
  assign cache_result[2] = _057_ & _060_;
  assign _061_ = i_arg_B[1] | _037_;
  assign _062_ = _001_ | _048_;
  assign _063_ = _061_ & _062_;
  assign _064_ = _000_ | _063_;
  assign _065_ = i_arg_B[1] & _032_;
  assign _066_ = i_arg_B[2] | _065_;
  assign _067_ = i_arg_B[3] & _066_;
  assign cache_result[3] = _064_ & _067_;
  assign _068_ = i_arg_B[2] & i_arg_B[3];
  assign cache_result[4] = _016_ & _068_;
  assign cache_result[5] = _039_ & _068_;
  assign cache_result[6] = _058_ & _068_;
  assign cache_result[7] = _065_ & _068_;
  assign cache_status[2:0] = 3'h0;
endmodule

module \$paramod\right_shift_2\M=8\K=8 (i_arg_A, i_arg_B, cache_result, cache_status);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire [31:0] a;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  wire [31:0] x;
  assign _027_ = ~i_arg_B[0];
  assign _028_ = ~i_arg_A[2];
  assign _029_ = ~i_arg_B[1];
  assign _030_ = ~i_arg_B[2];
  assign _031_ = ~i_arg_B[3];
  assign _032_ = i_arg_B[5] | i_arg_B[4];
  assign _033_ = i_arg_B[7] | i_arg_B[6];
  assign _034_ = _032_ | _033_;
  assign _035_ = ~_034_;
  assign _036_ = i_arg_A[7] | _034_;
  assign _037_ = i_arg_B[0] | _036_;
  assign _038_ = i_arg_B[0] | i_arg_A[3];
  assign _039_ = _027_ | i_arg_A[4];
  assign _040_ = _038_ & _039_;
  assign _041_ = _030_ & _035_;
  assign _042_ = i_arg_B[2] | _034_;
  assign _043_ = _034_ | _040_;
  assign _044_ = ~_043_;
  assign _045_ = _040_ | _042_;
  assign _046_ = _037_ & _045_;
  assign _047_ = i_arg_B[1] | _046_;
  assign _048_ = i_arg_A[6] | _034_;
  assign _049_ = ~_048_;
  assign _050_ = _027_ & _048_;
  assign _051_ = i_arg_B[0] | _049_;
  assign _052_ = i_arg_B[0] & _036_;
  assign _053_ = ~_052_;
  assign _054_ = _051_ & _053_;
  assign _055_ = _050_ | _052_;
  assign _056_ = _029_ | _037_;
  assign _057_ = i_arg_B[0] | i_arg_A[5];
  assign _058_ = _027_ | i_arg_A[6];
  assign _059_ = _057_ & _058_;
  assign _060_ = _034_ | _059_;
  assign _061_ = i_arg_B[0] | i_arg_A[4];
  assign _062_ = _027_ | i_arg_A[5];
  assign _063_ = _061_ & _062_;
  assign _064_ = _034_ | _063_;
  assign _065_ = i_arg_B[1] | _064_;
  assign _066_ = ~_065_;
  assign _067_ = _060_ & _065_;
  assign _068_ = _056_ & _067_;
  assign _069_ = i_arg_B[1] | _060_;
  assign _070_ = _056_ & _069_;
  assign _071_ = _055_ & _068_;
  assign _072_ = i_arg_B[2] | _071_;
  assign _073_ = _047_ & _072_;
  assign _074_ = i_arg_B[2] & _054_;
  assign _075_ = i_arg_B[0] & i_arg_A[3];
  assign _076_ = ~_075_;
  assign _077_ = i_arg_B[0] | _028_;
  assign _078_ = _076_ & _077_;
  assign _079_ = _041_ & _078_;
  assign _080_ = _074_ | _079_;
  assign _081_ = i_arg_B[1] & _080_;
  assign _082_ = ~_081_;
  assign _083_ = i_arg_B[2] & _066_;
  assign _084_ = _030_ | _065_;
  assign _085_ = i_arg_A[1] & i_arg_B[0];
  assign _086_ = i_arg_A[0] & _027_;
  assign _087_ = _085_ | _086_;
  assign _088_ = i_arg_B[1] | _087_;
  assign _089_ = ~_088_;
  assign _090_ = _041_ & _089_;
  assign _091_ = _042_ | _088_;
  assign _092_ = _084_ & _091_;
  assign _093_ = _083_ | _090_;
  assign _094_ = _082_ & _092_;
  assign _095_ = _081_ | _093_;
  assign _096_ = _031_ & _095_;
  assign _000_ = i_arg_B[3] | _094_;
  assign cache_result[0] = _073_ & _096_;
  assign _001_ = i_arg_B[1] & _044_;
  assign _002_ = i_arg_B[0] & i_arg_A[2];
  assign _003_ = i_arg_A[1] & _027_;
  assign _004_ = _034_ | _003_;
  assign _005_ = _002_ | _004_;
  assign _006_ = i_arg_B[1] | _005_;
  assign _007_ = ~_006_;
  assign _008_ = _001_ | _007_;
  assign _009_ = i_arg_B[2] | _008_;
  assign _010_ = i_arg_B[2] & _070_;
  assign _011_ = i_arg_B[3] | _010_;
  assign _012_ = ~_011_;
  assign _013_ = _009_ & _012_;
  assign cache_result[1] = _073_ & _013_;
  assign _014_ = i_arg_B[2] | _064_;
  assign _015_ = i_arg_B[1] & _014_;
  assign _016_ = ~_015_;
  assign _017_ = i_arg_B[1] | _080_;
  assign _018_ = _016_ & _017_;
  assign _019_ = _073_ & _018_;
  assign cache_result[2] = _031_ & _019_;
  assign _020_ = cache_result[1] & _018_;
  assign _021_ = ~_020_;
  assign _022_ = _000_ | _021_;
  assign _023_ = cache_result[0] | _020_;
  assign _024_ = _013_ | cache_result[2];
  assign _025_ = _023_ & _024_;
  assign cache_status[1] = _022_ & _025_;
  assign _026_ = i_arg_B[3] | _073_;
  assign cache_status[3] = ~_026_;
  assign a = 32'd8;
  assign cache_result[7:3] = 5'h00;
  assign { cache_status[2], cache_status[0] } = { 1'h0, i_arg_B[7] };
  assign x[31:8] = 24'h000000;
endmodule

module \$paramod\sub_and_mul\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire [7:0] cache;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  wire [7:0] s_A;
  wire [7:0] s_B;
  assign _000_ = ~i_arg_A[1];
  assign _001_ = ~i_arg_B[0];
  assign _002_ = ~i_arg_A[2];
  assign _003_ = ~i_arg_B[1];
  assign _004_ = ~i_arg_A[3];
  assign _005_ = ~i_arg_B[2];
  assign _006_ = ~i_arg_A[4];
  assign _007_ = ~i_arg_B[3];
  assign _008_ = ~i_arg_A[5];
  assign _009_ = ~i_arg_B[4];
  assign _010_ = ~i_arg_A[6];
  assign _011_ = ~i_arg_B[5];
  assign _012_ = ~i_arg_A[7];
  assign _013_ = ~i_arg_B[6];
  assign _014_ = _000_ & i_arg_B[0];
  assign _015_ = i_arg_A[1] | _001_;
  assign cache_result[1] = i_arg_A[1] ^ i_arg_B[0];
  assign _016_ = i_arg_A[2] & _003_;
  assign _017_ = _002_ | i_arg_B[1];
  assign _018_ = i_arg_A[2] ^ i_arg_B[1];
  assign _019_ = ~_018_;
  assign _020_ = _015_ & _019_;
  assign _021_ = _014_ | _018_;
  assign cache_result[2] = _015_ ^ _019_;
  assign _022_ = _017_ & _021_;
  assign _023_ = _016_ | _020_;
  assign _024_ = i_arg_A[3] & _005_;
  assign _025_ = _004_ | i_arg_B[2];
  assign _026_ = i_arg_A[3] ^ i_arg_B[2];
  assign _027_ = ~_026_;
  assign _028_ = _023_ & _027_;
  assign _029_ = _022_ | _026_;
  assign cache_result[3] = _023_ ^ _027_;
  assign _030_ = _025_ & _029_;
  assign _031_ = _024_ | _028_;
  assign _032_ = i_arg_A[4] & _007_;
  assign _033_ = _006_ | i_arg_B[3];
  assign _034_ = i_arg_A[4] ^ i_arg_B[3];
  assign _035_ = ~_034_;
  assign _036_ = _031_ & _035_;
  assign _037_ = _030_ | _034_;
  assign cache_result[4] = _031_ ^ _035_;
  assign _038_ = _033_ & _037_;
  assign _039_ = _032_ | _036_;
  assign _040_ = _008_ & i_arg_B[4];
  assign _041_ = i_arg_A[5] | _009_;
  assign _042_ = i_arg_A[5] & _009_;
  assign _043_ = _008_ | i_arg_B[4];
  assign _044_ = _041_ & _043_;
  assign cache_result[5] = _039_ ^ _044_;
  assign _045_ = i_arg_A[6] & _011_;
  assign _046_ = _010_ | i_arg_B[5];
  assign _047_ = i_arg_A[6] ^ i_arg_B[5];
  assign _048_ = ~_047_;
  assign _049_ = _039_ & _041_;
  assign _050_ = _038_ | _040_;
  assign _051_ = _043_ & _050_;
  assign _052_ = _042_ | _049_;
  assign _053_ = _048_ & _052_;
  assign _054_ = _047_ | _051_;
  assign cache_result[6] = _047_ ^ _051_;
  assign _055_ = _046_ & _054_;
  assign _056_ = _045_ | _053_;
  assign _057_ = _012_ & i_arg_B[6];
  assign _058_ = i_arg_A[7] & _013_;
  assign _059_ = _012_ ^ i_arg_B[6];
  assign cache_result[7] = _056_ ^ _059_;
  assign _060_ = _056_ & _057_;
  assign _061_ = _055_ & _058_;
  assign cache_status[3] = _060_ | _061_;
  assign cache = { i_arg_B[6:0], 1'h0 };
  assign cache_result[0] = i_arg_A[0];
  assign cache_status[2:0] = { 2'h0, cache_status[3] };
  assign s_A = i_arg_A;
  assign s_B = { i_arg_B[6:0], 1'h0 };
endmodule

module \$paramod\u2_to_zm\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  assign _00_ = ~i_arg_A[6];
  assign _01_ = ~i_arg_A[7];
  assign _02_ = i_arg_A[1] | i_arg_A[0];
  assign _03_ = i_arg_A[2] | _02_;
  assign _04_ = i_arg_A[3] | _03_;
  assign _05_ = i_arg_A[4] | _04_;
  assign _06_ = i_arg_A[5] | _05_;
  assign _07_ = ~_06_;
  assign _08_ = _00_ & i_arg_A[7];
  assign cache_status[3] = _07_ & _08_;
  assign _09_ = i_arg_A[1] & _01_;
  assign _10_ = i_arg_A[1] & i_arg_A[0];
  assign _11_ = ~_10_;
  assign _12_ = i_arg_A[7] & _02_;
  assign _13_ = _11_ & _12_;
  assign cache_result[1] = _09_ | _13_;
  assign cache_result[2] = i_arg_A[2] ^ _12_;
  assign _14_ = i_arg_A[7] & _03_;
  assign cache_result[3] = i_arg_A[3] ^ _14_;
  assign _15_ = i_arg_A[7] & _04_;
  assign cache_result[4] = i_arg_A[4] ^ _15_;
  assign _16_ = i_arg_A[7] & _05_;
  assign cache_result[5] = i_arg_A[5] ^ _16_;
  assign _17_ = i_arg_A[7] & _06_;
  assign cache_result[6] = i_arg_A[6] ^ _17_;
  assign { cache_result[7], cache_result[0] } = { i_arg_A[7], i_arg_A[0] };
  assign cache_status[2:0] = { 2'h0, cache_status[3] };
endmodule

module \$paramod\zm_to_u2\M=8\K=8 (i_arg_A, i_arg_B, cache_status, cache_result);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  output [7:0] cache_result;
  output [3:0] cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  assign _00_ = ~i_arg_A[7];
  assign _01_ = _00_ & i_arg_A[1];
  assign _02_ = i_arg_A[0] & i_arg_A[1];
  assign _03_ = ~_02_;
  assign _04_ = i_arg_A[0] | i_arg_A[1];
  assign _05_ = i_arg_A[7] & _04_;
  assign _06_ = _03_ & _05_;
  assign cache_result[1] = _01_ | _06_;
  assign cache_result[2] = i_arg_A[2] ^ _05_;
  assign _07_ = i_arg_A[2] | _04_;
  assign _08_ = i_arg_A[7] & _07_;
  assign cache_result[3] = i_arg_A[3] ^ _08_;
  assign _09_ = i_arg_A[3] | _07_;
  assign _10_ = i_arg_A[7] & _09_;
  assign cache_result[4] = i_arg_A[4] ^ _10_;
  assign _11_ = i_arg_A[7] & i_arg_A[4];
  assign _12_ = _10_ | _11_;
  assign cache_result[5] = i_arg_A[5] ^ _12_;
  assign _13_ = i_arg_A[7] & i_arg_A[5];
  assign _14_ = _12_ | _13_;
  assign cache_result[6] = i_arg_A[6] ^ _14_;
  assign { cache_result[7], cache_result[0] } = { i_arg_A[7], i_arg_A[0] };
  assign cache_status = 4'h0;
endmodule

module synth_new_alu(i_op, i_arg_A, i_arg_B, i_clk, i_reset, o_result, o_status, o_op_rdy, o_alu_error);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  wire _346_;
  wire _347_;
  wire _348_;
  wire _349_;
  wire _350_;
  wire _351_;
  wire _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  wire _356_;
  wire [7:0] A_add_bit_result;
  wire [3:0] A_add_bit_status;
  wire [7:0] A_comparison_2_result;
  wire [3:0] A_comparison_2_status;
  wire [7:0] A_sub_and_mul_result;
  wire [3:0] A_sub_and_mul_status;
  wire [7:0] A_u2_to_zm_result;
  wire [3:0] A_u2_to_zm_status;
  wire [7:0] K_absolute_result;
  wire [3:0] K_absolute_status;
  wire [7:0] K_comparison_1_result;
  wire [3:0] K_comparison_1_status;
  wire [7:0] K_division_result;
  wire [3:0] K_division_status;
  wire [7:0] K_right_shift_2_result;
  wire [3:0] K_right_shift_2_status;
  wire [7:0] M_addition_result;
  wire [3:0] M_addition_status;
  wire [7:0] M_division_result;
  wire [3:0] M_division_status;
  wire [7:0] M_right_shift_result;
  wire [3:0] M_right_shift_status;
  wire [7:0] M_zm_to_u2_result;
  wire [3:0] M_zm_to_u2_status;
  wire cache_alu_error;
  wire cache_op_ready;
  wire [7:0] finale_cache_result;
  wire [3:0] finale_cache_status;
  input [7:0] i_arg_A;
  input [7:0] i_arg_B;
  input i_clk;
  input [3:0] i_op;
  input i_reset;
  output o_alu_error;
  output o_op_rdy;
  reg o_op_rdy;
  output [7:0] o_result;
  reg [7:0] o_result;
  output [3:0] o_status;
  reg [3:0] o_status;
  assign _000_ = ~i_op[1];
  assign _001_ = ~i_op[0];
  assign _002_ = ~i_op[3];
  assign _003_ = ~i_op[2];
  assign _004_ = _000_ & _001_;
  assign _005_ = i_op[1] | i_op[0];
  assign _006_ = _002_ & i_op[2];
  assign _007_ = i_op[1] & i_op[0];
  assign _008_ = A_u2_to_zm_status[0] & _007_;
  assign _009_ = _001_ & A_add_bit_status[0];
  assign _010_ = _000_ & i_op[0];
  assign _011_ = A_comparison_2_status[0] & _010_;
  assign _012_ = _008_ | _009_;
  assign _013_ = _011_ | _012_;
  assign _014_ = _006_ & _013_;
  assign _015_ = i_op[3] & _003_;
  assign _016_ = K_comparison_1_status[0] & _010_;
  assign _017_ = _001_ & K_division_status[0];
  assign _018_ = K_right_shift_2_status[0] & _007_;
  assign _019_ = _017_ | _018_;
  assign _020_ = _016_ | _019_;
  assign _021_ = _015_ & _020_;
  assign _022_ = _014_ | _021_;
  assign _023_ = _005_ & _022_;
  assign _024_ = _002_ & _003_;
  assign _025_ = M_zm_to_u2_status[0] & _007_;
  assign _026_ = M_addition_status[0] & _010_;
  assign _027_ = _025_ | _026_;
  assign _028_ = i_op[1] & _001_;
  assign _029_ = M_division_status[0] & _028_;
  assign _030_ = M_right_shift_status[0] & _004_;
  assign _031_ = _029_ | _030_;
  assign _032_ = _027_ | _031_;
  assign _033_ = _024_ & _032_;
  assign _034_ = A_sub_and_mul_status[0] & _006_;
  assign _035_ = K_absolute_status[0] & _015_;
  assign _036_ = _034_ | _035_;
  assign _037_ = _004_ & _036_;
  assign _038_ = _033_ | _037_;
  assign _039_ = _023_ | _038_;
  assign cache_alu_error = i_reset & _039_;
  assign cache_op_ready = ~cache_alu_error;
  assign _040_ = K_right_shift_2_result[0] & _007_;
  assign _041_ = _001_ & K_division_result[0];
  assign _042_ = K_comparison_1_result[0] & _010_;
  assign _043_ = _040_ | _041_;
  assign _044_ = _042_ | _043_;
  assign _045_ = _015_ & _044_;
  assign _046_ = A_comparison_2_result[0] & _010_;
  assign _047_ = A_u2_to_zm_result[0] & _007_;
  assign _048_ = _001_ & A_add_bit_result[0];
  assign _049_ = _047_ | _048_;
  assign _050_ = _046_ | _049_;
  assign _051_ = _006_ & _050_;
  assign _052_ = _045_ | _051_;
  assign _053_ = _005_ & _052_;
  assign _054_ = K_absolute_result[0] & _015_;
  assign _055_ = A_sub_and_mul_result[0] & _006_;
  assign _056_ = _054_ | _055_;
  assign _057_ = M_zm_to_u2_result[0] & _007_;
  assign _058_ = M_division_result[0] & _028_;
  assign _059_ = M_addition_result[0] & _010_;
  assign _060_ = _057_ | _058_;
  assign _061_ = M_right_shift_result[0] & _004_;
  assign _062_ = _059_ | _061_;
  assign _063_ = _060_ | _062_;
  assign _064_ = _024_ & _063_;
  assign _065_ = _004_ & _056_;
  assign _066_ = _064_ | _065_;
  assign _067_ = _053_ | _066_;
  assign _068_ = M_zm_to_u2_result[1] & _007_;
  assign _069_ = M_addition_result[1] & _010_;
  assign _070_ = _068_ | _069_;
  assign _071_ = M_division_result[1] & _028_;
  assign _072_ = M_right_shift_result[1] & _004_;
  assign _073_ = _071_ | _072_;
  assign _074_ = _070_ | _073_;
  assign _075_ = _024_ & _074_;
  assign _076_ = K_right_shift_2_result[1] & _007_;
  assign _077_ = K_comparison_1_result[1] & _010_;
  assign _078_ = _076_ | _077_;
  assign _079_ = K_division_result[1] & _028_;
  assign _080_ = K_absolute_result[1] & _004_;
  assign _081_ = _079_ | _080_;
  assign _082_ = _078_ | _081_;
  assign _083_ = _015_ & _082_;
  assign _084_ = A_u2_to_zm_result[1] & _007_;
  assign _085_ = A_comparison_2_result[1] & _010_;
  assign _086_ = _084_ | _085_;
  assign _087_ = A_add_bit_result[1] & _028_;
  assign _088_ = A_sub_and_mul_result[1] & _004_;
  assign _089_ = _087_ | _088_;
  assign _090_ = _086_ | _089_;
  assign _091_ = _006_ & _090_;
  assign _092_ = _083_ | _091_;
  assign _093_ = _075_ | _092_;
  assign _094_ = _067_ | _093_;
  assign _095_ = M_zm_to_u2_result[7] & _007_;
  assign _096_ = M_addition_result[7] & _010_;
  assign _097_ = _095_ | _096_;
  assign _098_ = M_division_result[7] & _028_;
  assign _099_ = M_right_shift_result[7] & _004_;
  assign _100_ = _098_ | _099_;
  assign _101_ = _097_ | _100_;
  assign _102_ = _024_ & _101_;
  assign _103_ = K_right_shift_2_result[7] & _007_;
  assign _104_ = K_comparison_1_result[7] & _010_;
  assign _105_ = _103_ | _104_;
  assign _106_ = K_division_result[7] & _028_;
  assign _107_ = K_absolute_result[7] & _004_;
  assign _108_ = _106_ | _107_;
  assign _109_ = _105_ | _108_;
  assign _110_ = _015_ & _109_;
  assign _111_ = A_u2_to_zm_result[7] & _007_;
  assign _112_ = A_comparison_2_result[7] & _010_;
  assign _113_ = _111_ | _112_;
  assign _114_ = A_add_bit_result[7] & _028_;
  assign _115_ = A_sub_and_mul_result[7] & _004_;
  assign _116_ = _114_ | _115_;
  assign _117_ = _113_ | _116_;
  assign _118_ = _006_ & _117_;
  assign _119_ = _110_ | _118_;
  assign _120_ = _102_ | _119_;
  assign _121_ = K_right_shift_2_result[6] & _007_;
  assign _122_ = _001_ & K_division_result[6];
  assign _123_ = K_comparison_1_result[6] & _010_;
  assign _124_ = _121_ | _122_;
  assign _125_ = _123_ | _124_;
  assign _126_ = _015_ & _125_;
  assign _127_ = A_comparison_2_result[6] & _010_;
  assign _128_ = A_u2_to_zm_result[6] & _007_;
  assign _129_ = _001_ & A_add_bit_result[6];
  assign _130_ = _128_ | _129_;
  assign _131_ = _127_ | _130_;
  assign _132_ = _006_ & _131_;
  assign _133_ = _126_ | _132_;
  assign _134_ = _005_ & _133_;
  assign _135_ = K_absolute_result[6] & _015_;
  assign _136_ = A_sub_and_mul_result[6] & _006_;
  assign _137_ = _135_ | _136_;
  assign _138_ = M_addition_result[6] & _010_;
  assign _139_ = M_zm_to_u2_result[6] & _007_;
  assign _140_ = M_division_result[6] & _028_;
  assign _141_ = _138_ | _139_;
  assign _142_ = M_right_shift_result[6] & _004_;
  assign _143_ = _140_ | _142_;
  assign _144_ = _141_ | _143_;
  assign _145_ = _024_ & _144_;
  assign _146_ = _004_ & _137_;
  assign _147_ = _145_ | _146_;
  assign _148_ = _134_ | _147_;
  assign _149_ = _120_ | _148_;
  assign _150_ = _094_ | _149_;
  assign _151_ = ~_150_;
  assign _152_ = K_comparison_1_result[4] & _010_;
  assign _153_ = K_right_shift_2_result[4] & _007_;
  assign _154_ = _001_ & K_division_result[4];
  assign _155_ = _153_ | _154_;
  assign _156_ = _152_ | _155_;
  assign _157_ = _015_ & _156_;
  assign _158_ = A_comparison_2_result[4] & _010_;
  assign _159_ = A_u2_to_zm_result[4] & _007_;
  assign _160_ = _001_ & A_add_bit_result[4];
  assign _161_ = _159_ | _160_;
  assign _162_ = _158_ | _161_;
  assign _163_ = _006_ & _162_;
  assign _164_ = _157_ | _163_;
  assign _165_ = _005_ & _164_;
  assign _166_ = K_absolute_result[4] & _015_;
  assign _167_ = A_sub_and_mul_result[4] & _006_;
  assign _168_ = _166_ | _167_;
  assign _169_ = M_addition_result[4] & _010_;
  assign _170_ = M_zm_to_u2_result[4] & _007_;
  assign _171_ = M_division_result[4] & _028_;
  assign _172_ = _169_ | _170_;
  assign _173_ = M_right_shift_result[4] & _004_;
  assign _174_ = _171_ | _173_;
  assign _175_ = _172_ | _174_;
  assign _176_ = _024_ & _175_;
  assign _177_ = _004_ & _168_;
  assign _178_ = _176_ | _177_;
  assign _179_ = _165_ | _178_;
  assign _180_ = M_zm_to_u2_result[5] & _007_;
  assign _181_ = M_addition_result[5] & _010_;
  assign _182_ = _180_ | _181_;
  assign _183_ = M_division_result[5] & _028_;
  assign _184_ = M_right_shift_result[5] & _004_;
  assign _185_ = _183_ | _184_;
  assign _186_ = _182_ | _185_;
  assign _187_ = _024_ & _186_;
  assign _188_ = K_right_shift_2_result[5] & _007_;
  assign _189_ = K_comparison_1_result[5] & _010_;
  assign _190_ = _188_ | _189_;
  assign _191_ = K_division_result[5] & _028_;
  assign _192_ = K_absolute_result[5] & _004_;
  assign _193_ = _191_ | _192_;
  assign _194_ = _190_ | _193_;
  assign _195_ = _015_ & _194_;
  assign _196_ = A_u2_to_zm_result[5] & _007_;
  assign _197_ = A_comparison_2_result[5] & _010_;
  assign _198_ = _196_ | _197_;
  assign _199_ = A_add_bit_result[5] & _028_;
  assign _200_ = A_sub_and_mul_result[5] & _004_;
  assign _201_ = _199_ | _200_;
  assign _202_ = _198_ | _201_;
  assign _203_ = _006_ & _202_;
  assign _204_ = _195_ | _203_;
  assign _205_ = _187_ | _204_;
  assign _206_ = _179_ | _205_;
  assign _207_ = M_zm_to_u2_result[3] & _007_;
  assign _208_ = M_addition_result[3] & _010_;
  assign _209_ = _207_ | _208_;
  assign _210_ = M_division_result[3] & _028_;
  assign _211_ = M_right_shift_result[3] & _004_;
  assign _212_ = _210_ | _211_;
  assign _213_ = _209_ | _212_;
  assign _214_ = _024_ & _213_;
  assign _215_ = K_right_shift_2_result[3] & _007_;
  assign _216_ = K_comparison_1_result[3] & _010_;
  assign _217_ = _215_ | _216_;
  assign _218_ = K_division_result[3] & _028_;
  assign _219_ = K_absolute_result[3] & _004_;
  assign _220_ = _218_ | _219_;
  assign _221_ = _217_ | _220_;
  assign _222_ = _015_ & _221_;
  assign _223_ = A_u2_to_zm_result[3] & _007_;
  assign _224_ = A_comparison_2_result[3] & _010_;
  assign _225_ = _223_ | _224_;
  assign _226_ = A_add_bit_result[3] & _028_;
  assign _227_ = A_sub_and_mul_result[3] & _004_;
  assign _228_ = _226_ | _227_;
  assign _229_ = _225_ | _228_;
  assign _230_ = _006_ & _229_;
  assign _231_ = _222_ | _230_;
  assign _232_ = _214_ | _231_;
  assign _233_ = K_comparison_1_result[2] & _010_;
  assign _234_ = K_right_shift_2_result[2] & _007_;
  assign _235_ = _001_ & K_division_result[2];
  assign _236_ = _234_ | _235_;
  assign _237_ = _233_ | _236_;
  assign _238_ = _015_ & _237_;
  assign _239_ = A_u2_to_zm_result[2] & _007_;
  assign _240_ = _001_ & A_add_bit_result[2];
  assign _241_ = A_comparison_2_result[2] & _010_;
  assign _242_ = _239_ | _240_;
  assign _243_ = _241_ | _242_;
  assign _244_ = _006_ & _243_;
  assign _245_ = _238_ | _244_;
  assign _246_ = _005_ & _245_;
  assign _247_ = K_absolute_result[2] & _015_;
  assign _248_ = A_sub_and_mul_result[2] & _006_;
  assign _249_ = _247_ | _248_;
  assign _250_ = M_addition_result[2] & _010_;
  assign _251_ = M_zm_to_u2_result[2] & _007_;
  assign _252_ = M_division_result[2] & _028_;
  assign _253_ = _250_ | _251_;
  assign _254_ = M_right_shift_result[2] & _004_;
  assign _255_ = _252_ | _254_;
  assign _256_ = _253_ | _255_;
  assign _257_ = _024_ & _256_;
  assign _258_ = _004_ & _249_;
  assign _259_ = _257_ | _258_;
  assign _260_ = _246_ | _259_;
  assign _261_ = _232_ | _260_;
  assign _262_ = _206_ | _261_;
  assign _263_ = ~_262_;
  assign _264_ = _151_ & _263_;
  assign _265_ = K_right_shift_2_status[1] & _007_;
  assign _266_ = K_comparison_1_status[1] & _010_;
  assign _267_ = _265_ | _266_;
  assign _268_ = K_division_status[1] & _028_;
  assign _269_ = K_absolute_status[1] & _004_;
  assign _270_ = _268_ | _269_;
  assign _271_ = _267_ | _270_;
  assign _272_ = _015_ & _271_;
  assign _273_ = M_zm_to_u2_status[1] & _007_;
  assign _274_ = _000_ & M_addition_status[1];
  assign _275_ = _001_ & M_division_status[1];
  assign _276_ = _273_ | _275_;
  assign _277_ = _004_ | _274_;
  assign _278_ = _276_ | _277_;
  assign _279_ = M_right_shift_status[1] | _005_;
  assign _280_ = _024_ & _279_;
  assign _281_ = _278_ & _280_;
  assign _282_ = A_u2_to_zm_status[1] & _007_;
  assign _283_ = A_comparison_2_status[1] & _010_;
  assign _284_ = _282_ | _283_;
  assign _285_ = A_add_bit_status[1] & _028_;
  assign _286_ = A_sub_and_mul_status[1] & _004_;
  assign _287_ = _285_ | _286_;
  assign _288_ = _284_ | _287_;
  assign _289_ = _006_ & _288_;
  assign _290_ = _281_ | _289_;
  assign _291_ = _272_ | _290_;
  assign _292_ = _264_ | _291_;
  assign finale_cache_status[1] = i_reset & _292_;
  assign _293_ = _120_ ^ _148_;
  assign _294_ = _179_ ^ _205_;
  assign _295_ = _293_ ^ _294_;
  assign _296_ = _232_ ^ _260_;
  assign _297_ = _067_ ^ _093_;
  assign _298_ = _296_ ^ _297_;
  assign _299_ = K_right_shift_2_status[2] & _007_;
  assign _300_ = _001_ & K_division_status[2];
  assign _301_ = K_comparison_1_status[2] & _010_;
  assign _302_ = _299_ | _300_;
  assign _303_ = _301_ | _302_;
  assign _304_ = _015_ & _303_;
  assign _305_ = A_comparison_2_status[2] & _010_;
  assign _306_ = A_u2_to_zm_status[2] & _007_;
  assign _307_ = _001_ & A_add_bit_status[2];
  assign _308_ = _306_ | _307_;
  assign _309_ = _305_ | _308_;
  assign _310_ = _006_ & _309_;
  assign _311_ = _304_ | _310_;
  assign _312_ = _005_ & _311_;
  assign _313_ = A_sub_and_mul_status[2] & _006_;
  assign _314_ = K_absolute_status[2] & _015_;
  assign _315_ = _313_ | _314_;
  assign _316_ = _004_ & _315_;
  assign _317_ = M_zm_to_u2_status[2] & _007_;
  assign _318_ = M_addition_status[2] & _010_;
  assign _319_ = _317_ | _318_;
  assign _320_ = M_division_status[2] & _028_;
  assign _321_ = M_right_shift_status[2] & _004_;
  assign _322_ = _320_ | _321_;
  assign _323_ = _319_ | _322_;
  assign _324_ = _024_ & _323_;
  assign _325_ = _316_ | _324_;
  assign _326_ = _312_ | _325_;
  assign _327_ = _295_ ^ _298_;
  assign _328_ = _326_ | _327_;
  assign finale_cache_status[2] = i_reset & _328_;
  assign _329_ = A_comparison_2_status[3] & _010_;
  assign _330_ = _001_ & A_add_bit_status[3];
  assign _331_ = A_u2_to_zm_status[3] & _007_;
  assign _332_ = _330_ | _331_;
  assign _333_ = _329_ | _332_;
  assign _334_ = _006_ & _333_;
  assign _335_ = K_comparison_1_status[3] & _010_;
  assign _336_ = _001_ & K_division_status[3];
  assign _337_ = K_right_shift_2_status[3] & _007_;
  assign _338_ = _336_ | _337_;
  assign _339_ = _335_ | _338_;
  assign _340_ = _015_ & _339_;
  assign _341_ = _334_ | _340_;
  assign _342_ = _005_ & _341_;
  assign _343_ = M_zm_to_u2_status[3] & _007_;
  assign _344_ = M_addition_status[3] & _010_;
  assign _345_ = _343_ | _344_;
  assign _346_ = M_division_status[3] & _028_;
  assign _347_ = M_right_shift_status[3] & _004_;
  assign _348_ = _346_ | _347_;
  assign _349_ = _345_ | _348_;
  assign _350_ = _024_ & _349_;
  assign _351_ = A_sub_and_mul_status[3] & _006_;
  assign _352_ = K_absolute_status[3] & _015_;
  assign _353_ = _351_ | _352_;
  assign _354_ = _004_ & _353_;
  assign _355_ = _350_ | _354_;
  assign _356_ = _342_ | _355_;
  assign finale_cache_status[3] = i_reset & _356_;
  assign finale_cache_result[0] = i_reset & _067_;
  assign finale_cache_result[1] = i_reset & _093_;
  assign finale_cache_result[2] = i_reset & _260_;
  assign finale_cache_result[3] = i_reset & _232_;
  assign finale_cache_result[4] = i_reset & _179_;
  assign finale_cache_result[5] = i_reset & _205_;
  assign finale_cache_result[6] = i_reset & _148_;
  assign finale_cache_result[7] = i_reset & _120_;
  always @(posedge i_clk)
      o_status[0] <= cache_alu_error;
  always @(posedge i_clk)
      o_status[1] <= finale_cache_status[1];
  always @(posedge i_clk)
      o_status[2] <= finale_cache_status[2];
  always @(posedge i_clk)
      o_status[3] <= finale_cache_status[3];
  always @(posedge i_clk)
      o_op_rdy <= cache_op_ready;
  always @(posedge i_clk)
      o_result[0] <= finale_cache_result[0];
  always @(posedge i_clk)
      o_result[1] <= finale_cache_result[1];
  always @(posedge i_clk)
      o_result[2] <= finale_cache_result[2];
  always @(posedge i_clk)
      o_result[3] <= finale_cache_result[3];
  always @(posedge i_clk)
      o_result[4] <= finale_cache_result[4];
  always @(posedge i_clk)
      o_result[5] <= finale_cache_result[5];
  always @(posedge i_clk)
      o_result[6] <= finale_cache_result[6];
  always @(posedge i_clk)
      o_result[7] <= finale_cache_result[7];
  \$paramod\absolute\M=8\K=8  mod_absolute (
    .cache_result(K_absolute_result),
    .cache_status(K_absolute_status),
    .i_arg_B(i_arg_B)
  );
  \$paramod\add_bit\M=8\K=8  mod_add_bit (
    .cache_result(A_add_bit_result),
    .cache_status(A_add_bit_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\addition_1\M=8\K=8  mod_addition_1 (
    .cache_result(M_addition_result),
    .cache_status(M_addition_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\comparison_1\M=8\K=8  mod_comparison_1 (
    .cache_result(K_comparison_1_result),
    .cache_status(K_comparison_1_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\comparison_2\M=8\K=8  mod_comparison_2 (
    .cache_result(A_comparison_2_result),
    .cache_status(A_comparison_2_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\division\M=8\K=8  mod_division (
    .cache_result(K_division_result),
    .cache_status(K_division_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\division_1\M=8\K=8  mod_division_1 (
    .cache_result(M_division_result),
    .cache_status(M_division_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\right_shift_1\M=8\K=8  mod_right_shift_1 (
    .cache_result(M_right_shift_result),
    .cache_status(M_right_shift_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\right_shift_2\M=8\K=8  mod_right_shift_2 (
    .cache_result(K_right_shift_2_result),
    .cache_status(K_right_shift_2_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\sub_and_mul\M=8\K=8  mod_sub_and_mul (
    .cache_result(A_sub_and_mul_result),
    .cache_status(A_sub_and_mul_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\u2_to_zm\M=8\K=8  mod_u2_to_zm (
    .cache_result(A_u2_to_zm_result),
    .cache_status(A_u2_to_zm_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  \$paramod\zm_to_u2\M=8\K=8  mod_zm_to_u2 (
    .cache_result(M_zm_to_u2_result),
    .cache_status(M_zm_to_u2_status),
    .i_arg_A(i_arg_A),
    .i_arg_B(i_arg_B)
  );
  assign finale_cache_status[0] = cache_alu_error;
  assign o_alu_error = o_status[0];
endmodule
